<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[I'm Ricky -- 个人主页]]></title>
  <link href="http://rickytan.github.io/atom.xml" rel="self"/>
  <link href="http://rickytan.github.io/"/>
  <updated>2015-11-07T09:49:44+08:00</updated>
  <id>http://rickytan.github.io/</id>
  <author>
    <name><![CDATA[Ricky]]></name>
    <email><![CDATA[ricky.tan.xin@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[是时候使用 PDF 资源了]]></title>
    <link href="http://rickytan.github.io/blog/2015/11/06/time-to-use-pdf-assets/"/>
    <updated>2015-11-06T17:56:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2015/11/06/time-to-use-pdf-assets</id>
    <content type="html"><![CDATA[<p>一年前我做了这个插件 <a href="https://github.com/rickytan/RTImageAssets">RTImageAssets</a>，为了解决自己在开发过
程中的一个痛点，这个痛点貌似也恰好是许多其他 iOS 开发者的痛点，那就是要不断地向美术解释如何正确切图。</p>

<p>于是一时间也获得了不少反馈，但这始终只是个临时解决办法。事实上从 <strong>Xcode 6</strong> 开始就已经支持使用 PDF
矢量图了。现在 iOS 设备越来越多，谁知道以后需要支持什么样的屏幕，而矢量图正是解决这一问题的良策。<!--more-->另外，很多同行反应从 @3x 的图生成的 @2x 的图点用的磁盘空间还大些，这其实是色彩空间和 PNG
压缩算法决定的，我也没有时间深入研究这个，开发这个插件的目的只是让它有 @2x 的图以保证运行时图片大小跟
期望的一致，事实上 <strong>Xcode</strong> 在打包时会自动优化 PNG 图片。所以终极解决方案，还是从现在开始，全部使用矢量图吧！</p>

<p>如果对 PNG 图片压缩有兴趣，相关信息可以在 <a href="https://tinypng.com/">https://tinypng.com/</a> 和 <a href="https://imageoptim.com/">https://imageoptim.com/</a> 上找到。</p>

<p>使用矢量图的方法跟普通 PNG 一样，按下图设置好后，原来的三个槽会变成一个，重新把图片拖进去就好：</p>

<p><img src="http://rickytan.github.io/images/pdf-asset/1.png" alt="image0" /></p>

<p>一定要选为 <em>Vector</em> ，之前碰到过将 <strong>PDF</strong> 图当 <strong>PNG</strong> 用的人……</p>

<p>这样一来，无需再担心屏幕的分辨率问题，随着 <strong>Xcode</strong> 的更新，它会自动加入所需的分辨率。</p>

<p>你不需要担心移动设置上使用矢量图的性能问题，因为事实上在打包的时候 <strong>Xcode</strong> 将它们变成 PNG 了：</p>

<p><img src="http://rickytan.github.io/images/pdf-asset/2.png" alt="image1" /></p>

<blockquote><p><em>最低支持到 <strong>iOS 6</strong> 时，会使用原始 PNG 图，可以看到以上的命名方式，<strong>iOS 7</strong> 以上已经将所有图片打包为 <code>Assets.car</code> 了</em></p></blockquote>

<p>关于矢量图的生成问题，如果美术会使用 <a href="http://www.sketchcn.com/">Sketch</a> ，那么它对生成  PDF 等十分友好，如果 TA 不会用 Sketch，你是时候招个新的了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIButton 状态的新理解]]></title>
    <link href="http://rickytan.github.io/blog/2015/07/06/uibutton-state/"/>
    <updated>2015-07-06T19:45:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2015/07/06/uibutton-state</id>
    <content type="html"><![CDATA[<p><code>UIButton</code> 可能是 <strong>iOS</strong> 开发中使用的最多的控件之一了，它拥有极高的可定制性，通过合理的设置可以满足大部分点击响应的需求。一般认为，一个 <code>UIButton</code> 有四种状态，即：</p>

<ul>
<li>正常（Normal）</li>
<li>高亮（Highlighted）</li>
<li>选中（Selected）</li>
<li>禁止（Disabled）</li>
</ul>


<p>但在实际项目中发现，当用户点在一个选中态的按钮上时，按钮显示的是正常状的样式，这是为什么呢？</p>

<!--more-->


<p>事实上，<code>UIControlState</code> 是个 BitMask：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">typedef</span> <span class="nf">NS_OPTIONS</span><span class="p">(</span><span class="n">NSUInteger</span><span class="p">,</span> <span class="n">UIControlState</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">UIControlStateNormal</span>       <span class="o">=</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIControlStateHighlighted</span>  <span class="o">=</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">0</span><span class="p">,</span>                  <span class="c1">// used when UIControl isHighlighted is set</span>
</span><span class='line'>    <span class="n">UIControlStateDisabled</span>     <span class="o">=</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIControlStateSelected</span>     <span class="o">=</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span><span class="p">,</span>                  <span class="c1">// flag usable by app (see below)</span>
</span><span class='line'>    <span class="n">UIControlStateApplication</span>  <span class="o">=</span> <span class="mh">0x00FF0000</span><span class="p">,</span>              <span class="c1">// additional flags available for application use</span>
</span><span class='line'>    <span class="n">UIControlStateReserved</span>     <span class="o">=</span> <span class="mh">0xFF000000</span>               <span class="c1">// flags reserved for internal framework use</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>3 个有效的 Bit 组合其实可以拥有 8 种状态！</p>

<p>我们可以用代码实际测试一下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">whiteColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">CGPoint</span> <span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">CGRectGetWidth</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="mf">60.f</span><span class="p">);</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn0</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getButton</span><span class="p">];</span>
</span><span class='line'>    <span class="n">btn0</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">center</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">60.f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn1</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getButton</span><span class="p">];</span>
</span><span class='line'>    <span class="n">btn1</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn1</span><span class="p">.</span><span class="n">highlighted</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn1</span><span class="p">.</span><span class="n">enabled</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">60.f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn2</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getButton</span><span class="p">];</span>
</span><span class='line'>    <span class="n">btn2</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn2</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">60.f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn3</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getButton</span><span class="p">];</span>
</span><span class='line'>    <span class="n">btn3</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn3</span><span class="p">.</span><span class="n">enabled</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">60.f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn4</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getButton</span><span class="p">];</span>
</span><span class='line'>    <span class="n">btn4</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn4</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn4</span><span class="p">.</span><span class="n">enabled</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">60.f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn5</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getButton</span><span class="p">];</span>
</span><span class='line'>    <span class="n">btn5</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn5</span><span class="p">.</span><span class="n">highlighted</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn5</span><span class="p">.</span><span class="n">enabled</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">60.f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn6</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getButton</span><span class="p">];</span>
</span><span class='line'>    <span class="n">btn6</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn6</span><span class="p">.</span><span class="n">highlighted</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn6</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn6</span><span class="p">.</span><span class="n">enabled</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">center</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="mf">60.f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn7</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="n">getButton</span><span class="p">];</span>
</span><span class='line'>    <span class="n">btn7</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">center</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn7</span><span class="p">.</span><span class="n">highlighted</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn7</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="n">btn7</span><span class="p">.</span><span class="n">enabled</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn1</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn2</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn3</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn4</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn5</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn6</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">btn7</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">UIButton</span> <span class="o">*</span><span class="p">)</span><span class="nf">getButton</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitleColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">blackColor</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;Normal&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;Selected&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateSelected</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;Highlighted&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateHighlighted</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;Highlighted &amp; Disabled&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateHighlighted</span> <span class="o">|</span> <span class="n">UIControlStateDisabled</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;Disabled&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateDisabled</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;Selected &amp; Disabled&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateSelected</span> <span class="o">|</span> <span class="n">UIControlStateDisabled</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;Selected &amp; Highlighted &amp; Disabled&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateSelected</span> <span class="o">|</span> <span class="n">UIControlStateHighlighted</span> <span class="o">|</span> <span class="n">UIControlStateDisabled</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">btn</span> <span class="nl">setTitle:</span><span class="s">@&quot;Selected &amp; Highlighted&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateSelected</span> <span class="o">|</span> <span class="n">UIControlStateHighlighted</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">btn</span><span class="p">.</span><span class="n">bounds</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">240</span><span class="p">,</span> <span class="mi">30</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">btn</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>实验证明，</p>

<ul>
<li><code>UIControlStateHighlighted</code> 跟 <code>UIControlStateHighlighted | UIControlStateDisabled</code></li>
<li><code>UIControlStateSelected | UIControlStateHighlighted</code> 跟 <code>UIControlStateSelected | UIControlStateHighlighted | UIControlStateDisabled</code></li>
</ul>


<p>的效果是一样的，会相互覆盖（苹果的 Bug？），剩下还有 6 种可能的状态。同时我们还能发现，当一种状态（或组合状态）没有设置时，它会使用正常态的设置。</p>

<p><img src="http://rickytan.github.io/images/uibutton-state.png" alt="UIButton State" /></p>

<p>所以，如果你的按钮正常是白色的，选中时是<span style="color: red">红色</span>的，而你想让用户在点击一个选中按钮时让它保持<span style="color: red">红色</span>，应该这么做：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">UIButton</span> <span class="o">*</span><span class="n">btn</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">btn</span> <span class="nl">setTitleColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">whiteColor</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">btn</span> <span class="nl">setTitleColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">redColor</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateSelected</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">btn</span> <span class="nl">setTitleColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">redColor</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateSelected</span> <span class="o">|</span> <span class="n">UIControlStateHighlighted</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>因为点击选中的按钮其实就是选中态与高亮态的叠加，如果没有设置它就用正常态的白色了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp + Bower + AngularJS 进行 Web 开发并使用 Coding.net 搭建在线演示最佳实践]]></title>
    <link href="http://rickytan.github.io/blog/2015/04/20/gulp-plus-bower-plus-angularjs-plus-coding-dot-net-best-practice/"/>
    <updated>2015-04-20T20:59:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2015/04/20/gulp-plus-bower-plus-angularjs-plus-coding-dot-net-best-practice</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>随着 <a href="http://coding.net">Coding</a> 的迅速发展，它为国内开放者提供了越来越多的便利，其中之一便是免费、一键搭建在线演示站点。它能够自动检测项目所用的语言及运行环境，大多数情况下无需过多配置即可启动演示。本文就如何利用 <a href="http://coding.net">Coding</a> 提高 Web 开发者效率给出一个最佳实践。</p>

<h2>项目初始化</h2>

<p>本文假设读者已经具备 <a href="http://gulpjs.com/">Gulp</a> 和 <a href="http://bower.io/">Bower</a> 的基本知识。</p>

<p>首先，新建一个空目录为作您的工作目录，如：testProject。</p>

<!--more-->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir testProject
</span><span class='line'><span class="nb">cd </span>testProject
</span></code></pre></td></tr></table></div></figure>


<p>然后初始化 <code>git</code>， <code>bower</code> 及 <code>npm</code>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git init
</span><span class='line'>bower init
</span><span class='line'>npm init
</span></code></pre></td></tr></table></div></figure>


<p>新建一个 <strong>app</strong> 目录，您自己的所有源代码和资源文件将放在这里，在 <strong>app</strong> 下面创建 <strong>images</strong>，<strong>scripts</strong>，<strong>styles</strong> 目录分别放置项目所需的图片、脚本和样式文件。</p>

<h2>安装前端依赖</h2>

<p>本文以用 <a href="http://angularjs.org/">AngularJS</a> 做一个 <strong>ToDo List</strong> 为例，逐步讲述如何用 <a href="http://coding.net">Coding</a> 搭建演示。</p>

<p>首先安装 <strong>AngularJS</strong>、<strong>Bootstrap</strong>：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bower install angularjs bootstrap --save
</span></code></pre></td></tr></table></div></figure>


<h2>安装编译依赖</h2>

<p>这里的编译是指 <strong>Gulp</strong> 的工作流处理流程。</p>

<p>首先在项目目录下添加如下的 <strong>gulpfile.js</strong> （具体解释请参考官方网站：<a href="http://gulpjs.com/">http://gulpjs.com/</a>）：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/*global -$ */</span>
</span><span class='line'><span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span><span class='line'><span class="c1">// generated on &lt;%= (new Date).toISOString().split(&#39;T&#39;)[0] %&gt; using &lt;%= pkg.name %&gt; &lt;%= pkg.version %&gt;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">gulp</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;gulp&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">$</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;gulp-load-plugins&#39;</span><span class="p">)();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">browserSync</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;browser-sync&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">reload</span> <span class="o">=</span> <span class="nx">browserSync</span><span class="p">.</span><span class="nx">reload</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;styles&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;less&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s1">&#39;app/styles/main.css&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">postcss</span><span class="p">([</span>
</span><span class='line'>      <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;autoprefixer-core&#39;</span><span class="p">)({</span><span class="nx">browsers</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;last 1 version&#39;</span><span class="p">]})</span>
</span><span class='line'>    <span class="p">]))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;.tmp/styles&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;less&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s1">&#39;app/styles/*.less&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">less</span><span class="p">())</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;app/styles&#39;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;dist/styles&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;jshint&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s1">&#39;app/scripts/**/*.js&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">reload</span><span class="p">({</span><span class="nx">stream</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">once</span><span class="o">:</span> <span class="kc">true</span><span class="p">}))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">jshint</span><span class="p">())</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">jshint</span><span class="p">.</span><span class="nx">reporter</span><span class="p">(</span><span class="s1">&#39;jshint-stylish&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">browserSync</span><span class="p">.</span><span class="nx">active</span><span class="p">,</span> <span class="nx">$</span><span class="p">.</span><span class="nx">jshint</span><span class="p">.</span><span class="nx">reporter</span><span class="p">(</span><span class="s1">&#39;fail&#39;</span><span class="p">)));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;html&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;styles&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">assets</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">useref</span><span class="p">.</span><span class="nx">assets</span><span class="p">({</span><span class="nx">searchPath</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;.tmp&#39;</span><span class="p">,</span> <span class="s1">&#39;app&#39;</span><span class="p">,</span> <span class="s1">&#39;.&#39;</span><span class="p">]});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">([</span><span class="s1">&#39;app/*.html&#39;</span><span class="p">])</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">assets</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="k">if</span><span class="p">(</span><span class="s1">&#39;*.js&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">.</span><span class="nx">uglify</span><span class="p">()))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="k">if</span><span class="p">(</span><span class="s1">&#39;*.css&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">.</span><span class="nx">csso</span><span class="p">()))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">assets</span><span class="p">.</span><span class="nx">restore</span><span class="p">())</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">useref</span><span class="p">())</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="k">if</span><span class="p">(</span><span class="s1">&#39;*.html&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">.</span><span class="nx">minifyHtml</span><span class="p">({</span><span class="nx">conditionals</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">loose</span><span class="o">:</span> <span class="kc">false</span><span class="p">})))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;dist&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;images&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s1">&#39;app/images/**/*&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">cache</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">imagemin</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">progressive</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">interlaced</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>    <span class="p">})))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;dist/images&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;fonts&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="nx">require</span><span class="p">(</span><span class="s1">&#39;main-bower-files&#39;</span><span class="p">)().</span><span class="nx">concat</span><span class="p">([</span><span class="s1">&#39;app/fonts/**/*&#39;</span><span class="p">,</span><span class="s1">&#39;bower_components/bootstrap/fonts/**/*&#39;</span><span class="p">]))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s1">&#39;**/*.{eot,svg,ttf,woff,woff2,otf}&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">flatten</span><span class="p">())</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;.tmp/fonts&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;dist/fonts&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;extras&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">([</span>
</span><span class='line'>    <span class="s1">&#39;app/*.*&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;!app/*.html&#39;</span>
</span><span class='line'>  <span class="p">],</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">dot</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">}).</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;dist&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;clean&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;del&#39;</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;.tmp&#39;</span><span class="p">,</span> <span class="s1">&#39;dist/*&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;serve&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;styles&#39;</span><span class="p">,</span> <span class="s1">&#39;fonts&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">browserSync</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">notify</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">port</span><span class="o">:</span> <span class="mi">9000</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">server</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">baseDir</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;.tmp&#39;</span><span class="p">,</span> <span class="s1">&#39;app&#39;</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">routes</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s1">&#39;/bower_components&#39;</span><span class="o">:</span> <span class="s1">&#39;bower_components&#39;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// watch for changes</span>
</span><span class='line'>  <span class="nx">gulp</span><span class="p">.</span><span class="nx">watch</span><span class="p">([</span>
</span><span class='line'>    <span class="s1">&#39;app/*.html&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;.tmp/styles/**/*.css&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;app/scripts/**/*.js&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;app/images/**/*&#39;</span>
</span><span class='line'>  <span class="p">]).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;change&#39;</span><span class="p">,</span> <span class="nx">reload</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">gulp</span><span class="p">.</span><span class="nx">watch</span><span class="p">(</span><span class="s1">&#39;app/styles/**/*.less&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;styles&#39;</span><span class="p">,</span> <span class="nx">reload</span><span class="p">]);</span>
</span><span class='line'>  <span class="nx">gulp</span><span class="p">.</span><span class="nx">watch</span><span class="p">(</span><span class="s1">&#39;bower.json&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;wiredep&#39;</span><span class="p">,</span> <span class="s1">&#39;fonts&#39;</span><span class="p">,</span> <span class="nx">reload</span><span class="p">]);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// inject bower components</span>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;wiredep&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">wiredep</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;wiredep&#39;</span><span class="p">).</span><span class="nx">stream</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s1">&#39;app/styles/*.scss&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">wiredep</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">ignorePath</span><span class="o">:</span> <span class="sr">/^(\.\.\/)+/</span>
</span><span class='line'>    <span class="p">}))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;app/styles&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s1">&#39;app/*.html&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">wiredep</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">exclude</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;bootstrap-sass-official&#39;</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">ignorePath</span><span class="o">:</span> <span class="sr">/^(\.\.\/)*\.\./</span>
</span><span class='line'>    <span class="p">}))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">gulp</span><span class="p">.</span><span class="nx">dest</span><span class="p">(</span><span class="s1">&#39;dist&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;build&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;jshint&#39;</span><span class="p">,</span> <span class="s1">&#39;html&#39;</span><span class="p">,</span> <span class="s1">&#39;images&#39;</span><span class="p">,</span> <span class="s1">&#39;fonts&#39;</span><span class="p">,</span> <span class="s1">&#39;extras&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">gulp</span><span class="p">.</span><span class="nx">src</span><span class="p">(</span><span class="s1">&#39;dist/**/*&#39;</span><span class="p">).</span><span class="nx">pipe</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">size</span><span class="p">({</span><span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;build&#39;</span><span class="p">,</span> <span class="nx">gzip</span><span class="o">:</span> <span class="kc">true</span><span class="p">}));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">gulp</span><span class="p">.</span><span class="nx">task</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;clean&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">gulp</span><span class="p">.</span><span class="nx">start</span><span class="p">(</span><span class="s1">&#39;build&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后，使用如下命令安装依赖插件等：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm install --save-dev autoprefixer-core browser-sync core-util-is del gulp gulp-bower gulp-cache gulp-csso gulp-filter gulp-flatten gulp-if gulp-imagemin gulp-jshint gulp-less gulp-load-plugins gulp-minify-css gulp-minify-html gulp-postcss gulp-size gulp-uglify gulp-usemin gulp-usemin2 gulp-useref inherits isarray jshint main-bower-files postcss wrapper jshint-stylish
</span></code></pre></td></tr></table></div></figure>


<p>以上步骤完成后，您的目录看起来应该是如下的样子：</p>

<p><img src="http://rickytan.github.io/images/gulp-best-practice0.png" alt="project directory" /></p>

<h2>开始编码</h2>

<p>所有项目初始工作已经完成，现在可以开始欢快的编码了！</p>

<p>我们首先在 <strong>app</strong> 目录下添加 <code>index.html</code> 文件：</p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>My ToDo List<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;X-UA-Compatible&quot;</span> <span class="na">content=</span><span class="s">&quot;IE=edge,chrome=1&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;viewport&quot;</span> <span class="na">content=</span><span class="s">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- build:css styles/main.css --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;/bower_components/bootstrap/dist/css/bootstrap.css&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;./styles/main.css&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- endbuild --&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!-- build:js scripts/app.js --&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;/bower_components/angularjs/angular.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;./scripts/app.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- endbuild --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body</span> <span class="na">ng-app=</span><span class="s">&quot;App&quot;</span> <span class="na">ng-controller=</span><span class="s">&quot;ListCtrl&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-2&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">&quot;list-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;li</span> <span class="na">ng-repeat=</span><span class="s">&quot;item in todoItems&quot;</span> <span class="na">class=</span><span class="s">&quot;list-group-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;item.done&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>                <span class="nt">&lt;label</span> <span class="na">class=</span><span class="s">&quot;item-content&quot;</span> <span class="na">ng-class=</span><span class="s">&quot;{&#39;item-done&#39;: item.done}&quot;</span><span class="nt">&gt;&lt;/label&gt;</span>
</span><span class='line'>                <span class="nt">&lt;a</span> <span class="na">href</span> <span class="na">ng-click=</span><span class="s">&quot;removeItem(item);&quot;</span> <span class="na">class=</span><span class="s">&quot;item-remove glyphicon glyphicon-remove&quot;</span> <span class="na">aria-hidden=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;&lt;/a&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>          <span class="nt">&lt;form</span> <span class="na">name=</span><span class="s">&quot;addForm&quot;</span> <span class="na">class=</span><span class="s">&quot;form-inline&quot;</span> <span class="na">ng-submit=</span><span class="s">&quot;addForm.$valid &amp;&amp; addItem();&quot;</span> <span class="na">novalidate</span><span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">class=</span><span class="s">&quot;form-control&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;content&quot;</span> <span class="na">required</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-success&quot;</span><span class="nt">&gt;&lt;i</span> <span class="na">class=</span><span class="s">&#39;glyphicon glyphicon-plus&#39;</span><span class="nt">&gt;&lt;/i&gt;&lt;/button&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/form&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-2&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 <strong>app/styles</strong> 目录下添加 <code>main.less</code> 文件：</p>

<figure class='code'><figcaption><span>main.less </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.item</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">input</span><span class="p">[</span><span class="n">type</span><span class="o">=</span><span class="s1">&#39;checkbox&#39;</span><span class="p">]</span> <span class="err">{</span>
</span><span class='line'>        <span class="n">appearance</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>        <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">appearance</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>        <span class="k">display</span><span class="o">:</span> <span class="k">inline</span><span class="o">-</span><span class="k">block</span><span class="p">;</span>
</span><span class='line'>        <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="m">#aaa</span><span class="p">;</span>
</span><span class='line'>        <span class="k">overflow</span><span class="o">:</span> <span class="k">hidden</span><span class="p">;</span>
</span><span class='line'>        <span class="k">vertical-align</span><span class="o">:</span> <span class="k">middle</span><span class="p">;</span>
</span><span class='line'>        <span class="k">margin-top</span><span class="o">:</span> <span class="m">-6px</span><span class="p">;</span>
</span><span class='line'>        <span class="k">width</span><span class="o">:</span> <span class="m">16px</span><span class="p">;</span>
</span><span class='line'>        <span class="k">height</span><span class="o">:</span> <span class="m">16px</span><span class="p">;</span>
</span><span class='line'>        <span class="k">outline</span><span class="o">:</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>        <span class="o">&amp;:</span><span class="n">checked</span><span class="o">:</span><span class="n">before</span> <span class="err">{</span>
</span><span class='line'>            <span class="k">content</span><span class="o">:</span> <span class="s1">&#39;✓&#39;</span><span class="p">;</span>
</span><span class='line'>            <span class="k">font-size</span><span class="o">:</span> <span class="m">16px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>            <span class="k">line-height</span><span class="o">:</span> <span class="m">16px</span><span class="p">;</span>
</span><span class='line'>            <span class="k">color</span><span class="o">:</span> <span class="m">#00a8e6</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'>    <span class="nc">.item-done</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">text-decoration</span><span class="o">:</span> <span class="k">line-through</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nc">.item-content</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">font-size</span><span class="o">:</span> <span class="m">20px</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="nc">.item-remove</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">float</span><span class="o">:</span> <span class="k">right</span><span class="p">;</span>
</span><span class='line'>        <span class="k">text-decoration</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>        <span class="k">display</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="nd">:hover</span> <span class="p">{</span>
</span><span class='line'>        <span class="o">.</span><span class="n">item</span><span class="o">-</span><span class="n">remove</span> <span class="err">{</span>
</span><span class='line'>            <span class="k">display</span><span class="o">:</span> <span class="k">inline</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="err">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>在 <strong>app/scripts/</strong> 下添加 <code>app.js</code> 文件：</p>

<figure class='code'><figcaption><span>app.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">angular</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;App&#39;</span><span class="p">,</span> <span class="p">[]).</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;ListCtrl&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;$scope&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">$scope</span><span class="p">.</span><span class="nx">todoItems</span> <span class="o">=</span> <span class="p">[{</span>
</span><span class='line'>                    <span class="nx">content</span><span class="o">:</span> <span class="s1">&#39;去医院看牙&#39;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">done</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>                <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">content</span><span class="o">:</span> <span class="s1">&#39;周末买衣服&#39;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">done</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>                <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>                    <span class="nx">content</span><span class="o">:</span> <span class="s1">&#39;完成工作日报&#39;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">done</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>                <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">$scope</span><span class="p">.</span><span class="nx">addItem</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">$scope</span><span class="p">.</span><span class="nx">todoItems</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
</span><span class='line'>                    <span class="nx">content</span><span class="o">:</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">content</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">done</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>                <span class="nx">$scope</span><span class="p">.</span><span class="nx">content</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>            <span class="nx">$scope</span><span class="p">.</span><span class="nx">removeItem</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">idx</span> <span class="o">=</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">todoItems</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">item</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">$scope</span><span class="p">.</span><span class="nx">todoItems</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">idx</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>        <span class="p">}]);</span>
</span><span class='line'><span class="p">})(</span><span class="nx">angular</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后，在命令行下运行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gulp serve
</span></code></pre></td></tr></table></div></figure>


<p>你的浏览器会自动打开预览，同时你所做的修改会实时生效，如下图：</p>

<p><img src="http://rickytan.github.io/images/gulp-best-practice1.png" alt="preview" /></p>

<h2>编译部署</h2>

<h3>生成上线版</h3>

<p>在命令行下执行：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gulp
</span></code></pre></td></tr></table></div></figure>


<p>等待命令完成，项目目录下会新增一个 <strong>dist</strong> 目录，这就是您用来部署上线的所有内容了。打开 <code>index.html</code> 可以看到，内容是经过压缩的了。</p>

<h3>推送到 <a href="http://coding.net">Coding</a></h3>

<p>在推送 <a href="http://coding.net">Coding</a> 上部署之前，添加如下 <code>.gitignore</code> 文件：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>dist/
</span><span class='line'>node_modules/
</span><span class='line'>bower_components/
</span><span class='line'>.tmp/
</span></code></pre></td></tr></table></div></figure>


<p>然后使用 <code>Git</code> 推送到您在 <a href="http://coding.net">Coding</a> 上建立的项目。</p>

<h3>新建 dist 分支</h3>

<ul>
<li>首先进入 <strong>dist</strong> 目录</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>dist
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>初始化 <code>git</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git init
</span><span class='line'>git remote add origin YOUR_PROJECT_ADDR
</span><span class='line'>git checkout --orphan dist
</span><span class='line'>git add --all
</span><span class='line'>git commit -m <span class="s1">&#39;init dist&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>推送到 dist</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git push origin dist
</span></code></pre></td></tr></table></div></figure>


<h3>部署</h3>

<p>打开你在 <a href="http://coding.net">Coding</a> 上的项目，找到 <strong>演示</strong> 标签，先点击 “自动检测”，通过之后出现如下面板：</p>

<p><img src="http://rickytan.github.io/images/gulp-best-practice2.png" alt="control panel" /></p>

<p>点击 “显示高级选项”，勾选 <strong>HTML</strong> 环境，部署版本中填入 <strong>dist</strong>，加上自定义的二级域名，然后<strong>一键部署</strong>，完成！现在你可以通过访问：<a href="http://todolist.coding.io">http://todolist.coding.io</a> 查看最终运行效果了。</p>

<h2>后记</h2>

<p>以后开发时，所有代码放在 <strong>app</strong> 目录下，同时运行 <code>gulp serve</code> 可以实时预览效果。上线前运行 <code>gulp</code> ，生成压缩合并过的资源文件，然后进入 <strong>dist</strong> 目录，运行如下命令将内容推送到 <a href="http://coding.net">Coding</a>，并再点一次<strong>一键部署</strong>即可！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add --all <span class="o">&amp;&amp;</span> git commit -m <span class="s1">&#39;update&#39;</span> <span class="o">&amp;&amp;</span> git push origin dist
</span></code></pre></td></tr></table></div></figure>


<p><code>gulp</code> 工作流包括如下步骤：</p>

<ol>
<li>去掉 <strong>HTML</strong> 中一切多余的空格、回车、引号等，使页面体积最小；</li>
<li>将多个 <strong>js</strong> 文件合并为一个，并用 <a href="https://developers.google.com/closure/compiler/">Closure Compiler</a> 压缩；</li>
<li>去除图片中的多余信息，如曝光时间、地理位置等，并使用类似于 <a href="https://imageoptim.com/">ImageOptim</a> 的算法将图片压缩到最小；</li>
<li>编译 <strong>LESS</strong> 文件为 <strong>CSS</strong>，并将多个 <strong>CSS</strong> 合并、压缩为一个</li>
</ol>


<p>总之，使线上的版本所用的流量最小化，同时运行速度最快！</p>

<p>本文中的所有源代码均可在：<a href="https://coding.net/u/rickytan/p/GulpCodingBestPractice/git">https://coding.net/u/rickytan/p/GulpCodingBestPractice/git</a> 上找到，运行如下命令即可看到本文中的效果了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://git.coding.net/rickytan/GulpCodingBestPractice.git
</span><span class='line'><span class="nb">cd </span>GulpCodingBestPractice
</span><span class='line'>npm install
</span><span class='line'>bower install
</span><span class='line'>gulp serve
</span></code></pre></td></tr></table></div></figure>


<p>完！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何生成分级的类别列表？]]></title>
    <link href="http://rickytan.github.io/blog/2015/04/11/how-to-generate-a-category-list/"/>
    <updated>2015-04-11T21:21:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2015/04/11/how-to-generate-a-category-list</id>
    <content type="html"><![CDATA[<h2>分类问题</h2>

<p>最近在做一个网页时，有这样一个需求，事实上很多电商之类的网站都有这样的需求：分类。然而这种分类又可以有无穷多子类，如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>书
</span><span class='line'>  |`- 自然科学
</span><span class='line'>  |      |`- 物理
</span><span class='line'>  |      |      |`- 经典物理
</span><span class='line'>  |      |       `- 量子物理
</span><span class='line'>  |       `- 数学
</span><span class='line'>   `- 小说
</span><span class='line'>         |`- 都市爱情
</span><span class='line'>          `- 乡村爱情
</span><span class='line'>唱片
</span><span class='line'>  |`- 爵士
</span><span class='line'>   `- 摇滚</span></code></pre></td></tr></table></div></figure>


<!--more-->


<p>这样的数据，在数据库中一般有以下设计：</p>

<ul>
<li><strong>ID</strong>：分类的唯一标识；</li>
<li><strong>PID</strong>：父类的 ID；</li>
<li><strong>Name</strong>：分类名。</li>
</ul>


<p>于是，在上例中，数据库中保存的数据可能是这样的：</p>

<table>
<thead>
<tr>
<th>ID</th>
<th>PID</th>
<th>Name</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>0</td>
<td>书       </td>
</tr>
<tr>
<td>2</td>
<td>0</td>
<td>唱片</td>
</tr>
<tr>
<td>3</td>
<td>1</td>
<td>自然科学</td>
</tr>
<tr>
<td>4</td>
<td>1</td>
<td>小说</td>
</tr>
<tr>
<td>5</td>
<td>2</td>
<td>爵士</td>
</tr>
<tr>
<td>6</td>
<td>2</td>
<td>摇滚</td>
</tr>
<tr>
<td>7</td>
<td>3</td>
<td>物理</td>
</tr>
<tr>
<td>8</td>
<td>7</td>
<td>经典物理</td>
</tr>
<tr>
<td>9</td>
<td>7</td>
<td>量子物理</td>
</tr>
<tr>
<td>10</td>
<td>3</td>
<td>数学</td>
</tr>
<tr>
<td>&hellip;</td>
<td>&hellip;</td>
<td>&hellip;</td>
</tr>
</tbody>
</table>


<p>现在需要做一个添加项目的表单，其中一个需要填的数据就是该项目的分类，如何生成一个下拉选择，使得分类条目按层级关系列表出来？如下所示：</p>

<p><select name=cate>
  <option value=1>书</option>
  <option value=3>&nbsp;&nbsp;&nbsp;&nbsp;自然科学</option>
  <option value=7>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;物理</option>
  <option value=8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经典物理</option>
  <option value=9>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;量子物理</option>
  <option value=10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数学</option>
  <option value=?>&hellip;</option>
</select></p>

<p>很直观的一个思路是先从数据库查出所有的分类保存到一个数组中，然后从 <code>PID = 0</code> 的开始处理，可能用到多重循环。</p>

<h2>树的遍历</h2>

<p>事实上，如何分类的层级关系可以写成一个棵树的话，如下图，那么生成列表这个问题就是一个<strong>前序遍历</strong>问题了。</p>

<p><img src="http://rickytan.github.io/images/post/category-tree.png" title="分类树" alt="分类树" /></p>

<p>假设存在一个虚拟的 <code>Root</code> 节点，从 <code>Root</code> 开始，前序遍历，则遍历顺序依次是：</p>

<ol>
<li>Root</li>
<li>书</li>
<li>自然科学</li>
<li>物理</li>
<li>量子物理</li>
<li>经典物理</li>
<li>数学</li>
<li>小说</li>
<li>都市爱情</li>
<li>乡村爱情</li>
<li>唱片</li>
<li>摇滚</li>
<li>爵士</li>
</ol>


<p>然后根据节点深度对结果作一下缩进，目的就达到了。我们可以发现，同级中的顺序并不那么重要，先访问<em>数学</em>和先访问<em>物理</em>对下拉选择并没有影响，只要不同分类之间的层级关系正确就好。</p>

<h2>递归的思路</h2>

<p>对于从数据库中取出来的分类数组，要正确构建成一棵树还是有点工作量的，应该可以有更好的方法。于是有了下面的递归的思路：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">categorys</span> <span class="o">=</span> <span class="p">[{</span><span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;xxx&#39;</span><span class="p">,</span> <span class="nx">pid</span><span class="o">:</span> <span class="s1">&#39;xxx&#39;</span><span class="p">,</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;xxx&#39;</span><span class="p">},</span> <span class="p">{},</span> <span class="p">{}];</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">insert</span><span class="p">(</span><span class="nx">pid</span><span class="p">,</span> <span class="nx">level</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>  <span class="nx">categorys</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">pid</span> <span class="o">==</span> <span class="nx">pid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">o</span><span class="p">.</span><span class="nx">level</span> <span class="o">=</span> <span class="nx">level</span><span class="p">;</span>
</span><span class='line'>          <span class="nx">arr</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">arr</span> <span class="o">=</span> <span class="nx">arr</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">insert</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">pid</span><span class="p">,</span> <span class="nx">level</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">arr</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">list</span> <span class="o">=</span> <span class="nx">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面代码中，<code>category</code> 是从后台请求的未经处理的所有分类数据，函数 <code>insert</code> 需要两个参数：<code>pid</code> 是父类的 <strong>ID</strong>，<code>level</code> 是分类所处的深度。<code>insert</code> 返回一个数组，该数组的元素是以指定 <code>pid</code> 为祖先的元素。</p>

<p>该算法的效率为 <code>N * d</code>，<code>N</code> 为分类个数，<code>d</code> 为层级深度</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自动生成低清图的 Xcode 插件]]></title>
    <link href="http://rickytan.github.io/blog/2015/01/17/rtimageassets/"/>
    <updated>2015-01-17T00:02:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2015/01/17/rtimageassets</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>随着 iPhone 6 Plus 等的发布，在普通消费者眼中，又要少两个肾，在 <strong>iOS</strong> 开发者眼中，又有两款新屏幕需要支持了。新的 iPhone 6 Plus 拥有一块 5.5 英寸的视网膜屏，分辨率为 <code>1080x1920</code>，<strong>PPI</strong> 为 401，在程序中表现为 <strong>3x</strong>，即，对于一张代码中指定的 <code>100x100</code> 的图片，实际需要 <code>300*300</code> 的图片填充才不会产生模糊。为此开发者们及美术们又要伤不少脑筋了，开发者需要一遍又一遍地向美术解释，每张图需要切三份，每份应该怎么样。有时候少切了，或者不满足要求，程序员还得自己动手缩放。</p>

<p>程序员总是懒的，于是我做了一个 <code>Xcode</code> 插件来完成此事：<a href="https://github.com/rickytan/RTImageAssets">RTImageAssets</a></p>

<!--more-->


<blockquote><h2>简介</h2>

<p>本项目是一个 Xcode 插件，用来生成 @3x 的图片资源对应的 @2x 和 @1x 版本，只要拖拽高清图到 @3x 的位置上，然后按 Ctrl+Shift+A 即可自动生成两张低清的补全空位。当然你也可以从 @2x 的图生成 @3x 版本，如果你对图片质量要求不高的话。</p>

<h2>特性</h2>

<ul>
<li>只会填补空位，如果你已经设置好了自己的 @2x 图，则不会生成；</li>
<li>自动重命名，保持项目干净（把 N.imageset 下的图片名字改为 N.png <a href="&#109;&#97;&#105;&#108;&#116;&#x6f;&#x3a;&#x4e;&#x40;&#x32;&#x78;&#46;&#112;&#x6e;&#x67;">&#78;&#x40;&#50;&#x78;&#x2e;&#112;&#110;&#103;</a> <a href="&#x6d;&#97;&#105;&#108;&#116;&#111;&#58;&#78;&#64;&#51;&#120;&#x2e;&#x70;&#110;&#103;">&#78;&#x40;&#x33;&#120;&#x2e;&#112;&#x6e;&#103;</a> 等）；</li>
<li>使用简单，不用再麻烦美术同学缩放了；</li>
</ul>


<p><strong>注意：</strong>本插件从 @3x 到 @2x 的缩放保证图片在屏幕上显示的物理尺寸一样，而不是与屏幕比例一样，缩放系数是 1.5，而不是 1242 / 640 = 1.94。</p></blockquote>

<p>更多信息，请移步：<a href="https://github.com/rickytan/RTImageAssets">https://github.com/rickytan/RTImageAssets</a></p>

<h2>安装</h2>

<p>你可以从源码构建安装（推荐）：</p>

<pre><code>git clone https://github.com/rickytan/RTImageAssets.git
</code></pre>

<p>或者运行如下命令安装 <code>Xcode</code> 插件管理器（官网：<a href="http://alcatraz.io/">http://alcatraz.io/</a>）：</p>

<pre><code>curl -fsSL https://raw.github.com/supermarin/Alcatraz/master/Scripts/install.sh | sh
</code></pre>

<p>搜索：<code>RTImageAssets</code></p>

<p>本插件还在不断完善之中，并在不久后会加入自动生成所有 <strong>Icon</strong> 的功能，欢迎各位测试吐槽！如有任何问题，请到 <a href="https://github.com/rickytan/RTImageAssets/issues">https://github.com/rickytan/RTImageAssets/issues</a> 创建 <strong>Issue</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode 6 默认不再构建 armv7s 指令集的代码]]></title>
    <link href="http://rickytan.github.io/blog/2015/01/16/xcode-6-drops-armv7s/"/>
    <updated>2015-01-16T11:21:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2015/01/16/xcode-6-drops-armv7s</id>
    <content type="html"><![CDATA[<blockquote><p>原文 <a href="http://www.cocoanetics.com/2014/10/xcode-6-drops-armv7s/">Xcode 6 drops armv7s</a></p></blockquote>

<p>最新的 <code>Xcode</code> 默认已经不再为 <code>armv7s</code> 构建可执行代码了，这到底是计划之中还是一时疏忽？</p>

<p>当前最新版 <code>Xcode 6</code> 已经将 <code>${ARCHS_STANDARD}</code> 定义为 <code>armv7</code> 和 <code>arm64</code> 了，同时当你更新 <code>Xcode</code> 时它会不断提醒你删除你自己的定义，让 <code>Xcode</code> 帮你做决定。而在你不堪骚扰按它的做之后，你会发现你的项目不再构建 <code>armv7s</code> 的代码了。</p>

<p><code>armv7s</code> 的指令集运行于 Apple A6 （iPhone 5）和 Apple A6X （iPad 4）CPU 上。接下来的 Apple A7 （iPhone 5S，iPad Air，iPad Mini Retina）已经使用了 64 位的 <code>arm64</code> 架构。</p>

<!--more-->


<p>当苹果在 <code>Xcode</code> 中加入 <code>armv7s</code> 的支持后，它让许多使用了第三方的二进制库，如 Google Analytics，的开发者困惑了很久。为了构建应用，链接器需要所有链接的外部库包含相同的架构。开发者们不得不从他们的应用中移除 <code>armv7s</code> 的支持，而第三方库需要更新他们的二进制代码以添加新架构的支持。</p>

<p>这并不是一个真的问题，因为尽管少了一些优化，但 A6 芯片还是可以很好地运行 <code>armv7</code> 的代码。只是你升级了 <code>Xcode</code> 之后，原来好好的代码突然出现链接错误会让你很不爽而已。</p>

<p><img src="http://rickytan.github.io/images/Screen-Shot-2014-10-10-at-10.42.32.png" alt="Image0" /></p>

<p>修复方法也很简单。作为一个应用开发者，你可以简单地按照 <code>Xcode</code> 的建议删掉你自己覆写的编译架构设置。如果设置是以<strong>粗体</strong>显示的，你可以按下 <code>CMD + delete</code> 让它回到项目推荐设置。</p>

<p>作为一个组件的开发商，你需要采用其他途径。你想要开发者自行决定是否支持 <code>armv7s</code>，那么你应该在你所有的静态库及 <strong>Framework</strong> 中加入 <code>armv7s</code> 的支持。</p>

<p><img src="http://rickytan.github.io/images/Screen-Shot-2014-10-10-at-10.49.50.png" alt="Image1" /></p>

<p>开发者的链接器会自动选择所需的架构片断，用以生成应用。如果你设置了 <strong>Build Active Architecture Only</strong> 你会发现只有特定的架构包含进去了。<strong>Debug</strong> 编译时，这个设置默认为 <strong>YES</strong>，它只会生成当前活动的设备或模拟器的架构代码以加快编译速度。<strong>Release</strong> 编译时默认为 <strong>NO</strong>，所有指定的架构都会生成。</p>

<p>在静态库的生成日志中，每一行是一个架构的编译命令，最后是一行将所有架构代码合并，生成一个大的二进制文件。</p>

<p><img src="http://rickytan.github.io/images/Screen-Shot-2014-10-10-at-10.53.48.png" alt="Image2" /></p>

<p>另一种检验库文件中包含的架构片断的方法是使用 <code>file</code> 命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>file libBarCodeKit.a 
</span><span class='line'>libBarCodeKit.a: Mach-O universal binary with 3 architectures
</span><span class='line'>libBarCodeKit.a (for architecture armv7): current ar archive random library
</span><span class='line'>libBarCodeKit.a (for architecture arm64): current ar archive random library
</span><span class='line'>libBarCodeKit.a (for architecture armv7s):    current ar archive random library</span></code></pre></td></tr></table></div></figure>


<p>这个库包含所有的移动架构的代码。如果你要生成一个静态的 <strong>Framework</strong> 或者是通用的静态库做为二进制包发布你甚至还要包含模拟器的架构，如下所示：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>file DTRichTextEditor 
</span><span class='line'>DTRichTextEditor: Mach-O universal binary with 5 architectures
</span><span class='line'>DTRichTextEditor (for architecture armv7):    current ar archive random library
</span><span class='line'>DTRichTextEditor (for architecture armv7s):   current ar archive random library
</span><span class='line'>DTRichTextEditor (for architecture arm64):    current ar archive random library
</span><span class='line'>DTRichTextEditor (for architecture i386): current ar archive random library
</span><span class='line'>DTRichTextEditor (for architecture x86_64):   current ar archive random library</span></code></pre></td></tr></table></div></figure>


<p>总而言之，苹果再一次将我们推向指定的方向：停止支持 <code>armv7s</code>。这个架构目前已经被两代新产品的更强大的 64 位 CPU 取代。但是，作为组件开发商，我相信我们仍然需要加入 <code>armv7s</code> 的支持而将选择权交给应用开发者。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XCode 中如何自动增长 Build 号]]></title>
    <link href="http://rickytan.github.io/blog/2014/09/28/xcode-build-number/"/>
    <updated>2014-09-28T19:46:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/09/28/xcode-build-number</id>
    <content type="html"><![CDATA[<h2>iTunes Connect 新步骤</h2>

<p>随着 iOS8 的推出，苹果 itunes connect 中上传新应用多了一个新步骤：测试。</p>

<p>几个月前听闻 Apple 收购 <a href="https://testflightapp.com">TestFlight</a>，但一直没有看到任何变化，如今 TestFlight 已经集成到新应用的发布
、审核过程中了。打开 <a href="https://itunesconnect.apple.com">iTunesConnect</a>，可以看到在 <code>Versions</code> 旁边新
增了一个 <code>Prerelease</code> 标签页。原先通过 <code>XCode</code> 上传的应用会直接进入苹果的审核队列中，现在它会先出现
在这里，这里其实就是一个 <code>TestFlight</code> 的功能，你可以在 <strong><em>Users and Roles</em></strong> 中增加测试人员的 <em>Apple ID</em>，
然后在 <code>Prerelease</code> 下的 <code>Internal Testers</code> 中可以看到。每上传一个新的 <strong><em>Build</em></strong>，苹果会自动发邮件给
测试人员，测试人号点开邮件中的链接，在 <code>Safari</code> 中打开，然后 <code>Safari</code> 会打开设备上的 <code>Test Flight</code>，
开始自动下载应用进行测试。</p>

<!--more-->


<p>这样的好处很明显，正在进行测试的版本与正式上线的版本是完全一样的，因为原来我们要做测试可能测试版与正式
版使用了不同的签名证书，然后每次加新人又要添加设备 <code>UDID</code> 到 <strong><em>Provisioning Profile</em></strong> 等等。</p>

<p>测试通过之后，回到 <code>iTunesConnect</code> 中的 <code>Versions</code>，下拉找到 <code>Build</code>，选择刚刚测试好的 <strong><em>Build</em></strong> 号，
点 <code>Save</code>，然后就可以进入正常的审核队列了。</p>

<blockquote><p><strong><em>注意：</em></strong>测试功能只有使用苹果开发者网站最近生成的 <strong><em>Provisioning Profile</em></strong> 才能开启，而且会自
动加入，不要去 <strong><em>Entitlement</em></strong> 中勾选了。</p></blockquote>

<h2>Build 号</h2>

<p>在 <code>iOS</code> 应用的 <code>Info.plist</code> 中有两个版本号，即 <strong><em>Version</em></strong> 和 <strong><em>Build</em></strong>，对应键值为 <code>CFBundleShortVersionString</code> 和 <code>CFBundleVersion</code>。
一个是应用程序本身发布时的版本号，一个是表示这个发布版的二进制代码是第几次编译得到的。在 <strong><em>iOS8</em></strong>
之前由于苹果并没有约束这两者的关系，本人一般就把两个填一样的，如 <code>2.1.4</code> 等，也一直没出过问题，但是
最近由于苹果加入了测试功能，所有上传的 <strong><em>Build</em></strong> 都会保存，然后第一个因为某原因审核不过，再上传第
二个就出现了 <strong><em>Build</em></strong> 号冲突的问题。于是想到这才是 <strong><em>Build</em></strong> 的正确使用方法，它本应该是个整数，
在 <strong><em>Version</em></strong> 保持不变，<strong><em>Build</em></strong> 应该是要随着编译次数增长的！</p>

<h2>自动增长</h2>

<p>那么如何让 <strong><em>Build</em></strong> 号自动增加呢？很早前搜到过一段代码，现在可以用上了：</p>

<ol>
<li><p>在 <code>XCode</code> 中选中项目，打开 <code>Build Phases</code>，如下图：</p>

<p> <img src="http://rickytan.github.io/images/run-script.png" alt="RunScript" /></p></li>
<li><p>点 “+” 增加一个过程，选择“Run Script”，移到“Link Binary With Libraries”之后，并贴入以下代码：</p></li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'><span class="nv">buildNumber</span><span class="o">=</span><span class="k">$(</span>/usr/libexec/PlistBuddy -c <span class="s2">&quot;Print CFBundleVersion&quot;</span> <span class="s2">&quot;$INFOPLIST_FILE&quot;</span><span class="k">)</span>
</span><span class='line'><span class="nv">buildNumber</span><span class="o">=</span><span class="k">$((</span><span class="nv">$buildNumber</span> <span class="o">+</span> <span class="m">1</span><span class="k">))</span>
</span><span class='line'>/usr/libexec/PlistBuddy -c <span class="s2">&quot;Set :CFBundleVersion $buildNumber&quot;</span> <span class="s2">&quot;$INFOPLIST_FILE&quot;</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的翻墙代理]]></title>
    <link href="http://rickytan.github.io/blog/2014/07/14/my-gfw-proxy/"/>
    <updated>2014-07-14T22:14:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/07/14/my-gfw-proxy</id>
    <content type="html"><![CDATA[<p>不知道确切的日期，反正现在中国大陆访问 <strong><a href="https://www.google.com">Google</a></strong> 的所有站点都直接返回 <a href="http://zh.wikipedia.org/zh/HTTP_404">404</a> 了。这背后多少百度阴谋论又成为人们口中的谈资，但谈资归谈资，笑笑也就过去了，对于一个码农和伪科研者来说，没有 <strong>Google</strong> 是非常影响工作效率的。无论是学术 Paper 还是技术文档，从百度返回的屎一样的结果都会让人崩溃！</p>

<p>互联网是人类的互联网，人活着就不能放弃追求自由的权利！</p>

<h2><a href="https://chrome.google.com/webstore/detail/zenmate/fdcgdnkidjaadafnichfpabhfomcebme">ZenMate</a></h2>

<p>之前用过好长一段时间的 <strong><a href="https://www.google.com/chrome">Chrome</a></strong> 插件，一键翻墙，无需过多配置，免费且连接稳定。后来开始收费了，于是弃用。再后来（也就是现在）又免费了，但大陆已经无法使用了。</p>

<p>当然了，大陆外也许还能用，用它来加密你的网络访问，哪怕是 <code>HTTP</code> 的站点。</p>

<h2><a href="https://chrome.google.com/webstore/detail/%E7%BA%A2%E6%9D%8F/heehjpdocpefckjobfgnfdbhoebhphkf">红杏</a></h2>

<p>取名于成语“红杏出墙”，是非常有本土特色的一个翻墙插件，刚出来时可以翻任何网站，稳定快速，免配置。<!--more-->后来开始分免费和<code>VIP</code>，免费用户可以上 <a href="https://www.facebook.com">facebook</a>，<a href="https://www.google.com">google</a>，和 <a href="https://twitter.com">twitter</a>。</p>

<p>做为一个还有一定 <code>Web</code> 基础的码农，本人有时候也会通过改改插件的代码以访问以上三个之外的网站。也许后来他们监控到大量非 <code>VIP</code> 用户在翻其他网站，于是将代码打乱了。其实打不打乱区别不大</p>

<blockquote><p>If it runs, it can be cracked!</p></blockquote>

<p>只是麻烦一点点而已。</p>

<p>随着伟大的防火墙越来越历害，<em>红杏</em> 也开始出现不稳定了，<em>Chrome Web Store</em> 上骂的人一大堆，一些人刚付了一年的费用结果就不能用了。事实上 <em>红杏</em> 的工作人员也是一直在维护，多服务器切换，出现问题后很快就会好的，只是最近挂的次数太多了。然后，最近，免费用户不能再用了……</p>

<h2><a href="http://shadowsocks.org/">ShadowSocks</a></h2>

<p>在朋友的推荐下，前不久开始用 <a href="http://shadowsocks.org/">ShadowSocks</a>。也许是中国官方见识到了它的威力，于是连 <em>Shadowsocks</em> 的官方网站都被墙了。它的代理原理与 <code>go-agent</code> 类似，也是分 <code>server</code> 和 <code>client</code>。<code>server</code>监听代理请求，<code>client</code>则监听本地的 <code>SOCKS</code> 请求，<code>client</code>收到请求后，以可选的加密方式通过某种私有协议转发到 <code>server</code> 端，<code>server</code> 再发起网页请求到互联网。当然了，这个 <code>server</code> 是在墙外的，而这个私有协议就起到了穿墙的作用。</p>

<p>同时，如何你不想自己买 <code>VPS</code> 在墙外架设服务器的话，<a href="https://www.shadowsocks.net/">https://www.shadowsocks.net/</a> 网站有一些热心网友为了人类的自由，分享了自己的 <code>server</code>，配置信息通过 <code>BASE64</code> 编码，并生成了二维码。读取方式也简单：</p>

<ol>
<li><p>用手机拍摄或把二维码图片链接地址贴到此<a href="http://zxing.org/w/decode.jspx">网页</a>（推荐）上读取，得到原始信息：</p>

<pre><code> ss://YWVzLTI1Ni1jZmI6eG94b0AyMDguMTEwLjgzLjI0MjoxMjMzNA
</code></pre></li>
<li><p>去掉<code>ss://</code>，复制后面的字符串到<a href="http://tool.chinaz.com/Tools/base64.aspx">http://tool.chinaz.com/Tools/base64.aspx</a> 下面那个框中，点 “BASE64解密”，得到：</p>

<pre><code> aes-256-cfb:xoxo@208.110.83.242:12334
</code></pre></li>
<li><p>以上信息说明，采用<code>aes-256-cfb</code>加密方式，地址为：208.110.83.242，端口：12334，密码为：xoxo</p></li>
</ol>


<h3>优点</h3>

<p><strong>Shadowsocks</strong> 的优点是很明显的。首先，它采用私有协议，不那么容易被墙。其次，它有多种语言实现，安装都异常简单。</p>

<ul>
<li><p>Node 用户：</p>

<pre><code>  npm install -g shadowsocks
</code></pre></li>
<li><p>Python 用户</p>

<pre><code>  pip install shadowsocks
</code></pre></li>
<li><p>Ruby 用户</p>

<pre><code>  gem install shadowsocks
</code></pre></li>
</ul>


<p>等等。</p>

<p>最后，它拥有全平台支持的官户端，非程序员也可以较方便的使用</p>

<ul>
<li>PC 及 Mac 用户请下载<a href="http://sourceforge.net/projects/shadowsocksgui/files/dist/">客户端</a></li>
<li>iOS 用户安装 <a href="https://itunes.apple.com/cn/app/shadowsocks/id665729974?mt=8">Shadowsocks</a></li>
<li>对于 Android 用户，<a href="https://play.google.com/store/apps/details?id=com.github.shadowsocks">Google Play</a> 上有对应的版本，只是不能下载了，国内可以用 <em>碗豆夹</em> 试试，中文名叫 <strong>影梭</strong></li>
</ul>


<p>安装好客户端后，将之前获取的网友分享的服务器配置填入就可以了</p>

<p><img src="http://rickytan.github.io/images/shadowsocks-config.png" alt="Shadowsocks" /></p>

<p>代理服务器填 <code>sock5 127.0.0.1:1080</code>，取决于您的客户端配置。</p>

<h3>缺点</h3>

<p>唯一的缺点是，需要在本地启动一个服务。对于这一点，见仁见智，当然你可以让它开机启动，但我觉得总差那么点意思。</p>

<h2>我的代理服务器</h2>

<h3><code>VPS</code></h3>

<p>用过一段时间的 <strong>Shadowsocks</strong> ，网友共享的服务器用的人一多，也容易挂，于是就一直想自己搭一个。刚好也听说美国有很多 $15 一年的屌丝 <code>VPS</code> 出售，其性能做为个人使用的代理是绰绰有余的。经过对比之后，在 <strong><a href="https://vpsdime.com/">VPSDime</a></strong> 买了一年的 <code>VPS</code>，配置如下：</p>

<ul>
<li>双核共享CPU</li>
<li>512M 运行内存</li>
<li>30G 磁盘空间</li>
<li>1TB 网络带宽</li>
<li>1个独 IP</li>
</ul>


<p>另外，还有 $8 每年的配置，不过好像卖完了。</p>

<p>我安装了 <code>Ubuntu 14.04</code> 从官方源升级软件达到了惊人的 30M/s！不过从国内 ssh 登录非常慢</p>

<h3><code>HTTPS</code>代理</h3>

<p><code>Chrome</code> 浏览器支持最新的 <code>HTTPS</code> 代理（Safari 也支持），顾名思义，就是在传统的 <code>HTTP</code> 代理上加了安全协议。搭建代理服务器也是比较简单，可以直接用 <code>NodeJS</code> 安装 <code>spdyproxy</code> 来实现：</p>

<pre><code>npm install -g spdyproxy
</code></pre>

<p>很好用，也很方便。</p>

<pre><code>spdyproxy -k &lt;您的私钥&gt; -c &lt;您的证书&gt; -p &lt;代理端口&gt; -U &lt;用户名，可选&gt; -P &lt;密码，可选&gt;
</code></pre>

<p>但是，这个是在前台运行的，退出就没了，可以安装 <code>forever</code> 模块来让它在后台运行：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>npm install -g forever
</span><span class='line'>forever start <span class="sb">`</span>which spdyproxy<span class="sb">`</span> -k path/to/key.pem -c path/to/cert.pem -p ...
</span></code></pre></td></tr></table></div></figure>


<p>当然也可以直接用 <code>nohup</code> 命令让它后台运行，<code>forever</code> 的好处是，当它挂了会自动重启！</p>

<pre><code>nohup spdyproxy -k path/to/key.pem -c path/to/cert.pem -p ...
</code></pre>

<p>然后，就可以在你的“网络偏好”中设置“Web安全代理”了。</p>

<p><img src="http://rickytan.github.io/images/https-proxy.png" alt="image" /></p>

<p>另外，一个值得权衡的问题是：不加密码（-U -P 参数），那么你的服务器容易被别人扫描发现；加密码，每次输入又很麻烦（有些系统下，每次网页请求都要输入密码，而不是第一次请求）。于是本人 <strong>Fork</strong> 了 <code>spdyproxy</code> 的 <strong>Github</strong> 源代码（<a href="https://github.com/igrigorik/node-spdyproxy">https://github.com/igrigorik/node-spdyproxy</a>），并添加了白名单支持：</p>

<pre><code>spdyproxy -k path/to/key.pem -c path/to/cert.pem -p 44300 -U username -P password -W whitelist.json
</code></pre>

<p><code>whitelist.json</code> 中是一个 <code>JSON</code> 数组，每个元素是不需要密码的 IP 地址：</p>

<figure class='code'><figcaption><span>whitelist.json</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">[</span>
</span><span class='line'><span class="err">&#39;</span><span class="mf">1.2</span><span class="err">.</span><span class="mf">3.4</span><span class="err">&#39;</span><span class="p">,</span>
</span><span class='line'><span class="err">&#39;</span><span class="mf">3.3</span><span class="err">.</span><span class="mf">3.3</span><span class="err">&#39;</span><span class="p">,</span>
</span><span class='line'><span class="err">&#39;</span><span class="mf">60.180</span><span class="err">.</span><span class="mf">180.180</span><span class="err">&#39;</span>
</span><span class='line'><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样，添加自己常用的 IP 为白名单，自己访问不用密码，其他人访问需要密码，一定程度上防止别人盗用！</p>

<p>安装方式：</p>

<pre><code>git clone https://github.com/rickytan/node-spdyproxy
npm install -g node-spdyproxy/package.json
</code></pre>

<h3>自动代理配置</h3>

<p>以上工作并没有完，让 <strong>Chrome</strong> 访问所有网站都通过代理不是明智的选择，于是在 <code>VPS</code> 上安装 <code>nginx</code> 或 <code>apache</code> 做为文件服务器，编写一个 <code>PAC</code> 文件，选择性使用代理：</p>

<figure class='code'><figcaption><span>proxy.pac </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// 翻墙</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">proxy_list</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;google.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;facebook.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 广告</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">black_list</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>  <span class="s2">&quot;pubstat.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;mcfg.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;biz5.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;float.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;cl.kankan.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;211.94.190.80&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;mtips.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;211.94.190.80&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;mtips.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;adsresult.joywell.com.cn&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;advstat.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;wy.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;kkpgv.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;statis.kankan.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;server1.adpolestar.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;mpv.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;vid.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;valo.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;valf.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;walp.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;static.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;vid.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;valo.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;valf.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;walp.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;static.atm.youku.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;*.p2v.tudou.com*&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;at-img1.tdimg.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;at-img2.tdimg.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;at-img3.tdimg.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;adplay.tudou.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;adcontrol.tudou.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;stat.tudou.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;v2.stat.ku6.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;v3.stat.ku6.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;v0.stat.ku6.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;v1.stat.ku6.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;st.vq.ku6.cn&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;stat2.888.ku6.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;pq.stat.ku6.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;mcfg.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;biz5.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;server1.adpolestar.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;advstat.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;mpv.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;images.sohu.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;dcads.sina.com.cn&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;pubstat.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;float.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;recommend.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;cl.kankan.xunlei.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;googlesyndication.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;pagead2.googlesyndication.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;doubleclick.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;union.baidu.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;googleads.g.doubleclick.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;cpro.baidu.com&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;biz5.sandai.net&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;*ad*.00000000*&quot;</span>
</span><span class='line'><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">https</span> <span class="o">=</span> <span class="s2">&quot;HTTPS xxx.xxx.xxx.xxx:xxx; DIRECT&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">direct</span> <span class="o">=</span> <span class="s2">&quot;DIRECT&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">deny</span> <span class="o">=</span> <span class="s2">&quot;PROXY 127.0.0.1;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">FindProxyForURL</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">host</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">black_list</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">domain</span> <span class="o">=</span> <span class="nx">black_list</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">shExpMatch</span><span class="p">(</span><span class="nx">host</span><span class="p">,</span> <span class="nx">domain</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">deny</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">proxy_list</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">domain</span> <span class="o">=</span> <span class="nx">proxy_list</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">domain</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;.&#39;</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">domain</span> <span class="o">=</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="nx">domain</span><span class="p">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">host</span> <span class="o">===</span> <span class="nx">proxy_list</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">||</span>
</span><span class='line'>          <span class="nx">dnsDomainIs</span><span class="p">(</span><span class="nx">host</span><span class="p">,</span> <span class="nx">domain</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">https</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">direct</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>更详细的配置，请见：<a href="https://github.com/igrigorik/node-spdyproxy">https://github.com/igrigorik/node-spdyproxy</a></em></p>

<h3>更好的方式</h3>

<p>用自己的 <code>VPS</code> 为文件服务器是可行的，但是不方便。如之前所说，国内 ssh 访问非常慢，如果你要修改 <code>proxy.pac</code> 文件比较麻烦。同时，<strong>Chrome</strong> 启动时加载一个国外的配置文件会导致启动变慢。于是就想到了用 <strong><a href="https://cn.avoscloud.com">AVOSCloud</a></strong> 的云代码功能，可以托管一些静态文件。</p>

<ol>
<li>登录 <strong>AVOSCloud</strong>，新建应用</li>
<li>打开应用设置，添加 “Web主机” 的二级域名：<code>your-subdomain.avosapps.com</code></li>
<li>打开 “云代码” 面板，下载项目框架，Web主机版</li>
<li>解压，在 <code>public</code> 目录下放置你的 proxy.pac 文件</li>
<li>将项目建立 <strong>git repo</strong>，并 push 到 <strong><a href="https://github.com">Github</a></strong>，或 <strong><a href="https://bitbucket.org">Bitbucket</a></strong>（推荐，可私用）</li>
<li>在 <strong>AVOSCloud</strong> 应用下的 “云代码” 面板下，填写<strong>Repo</strong>地址，并复制 <code>Deploy Key</code> 到你的 <strong>Repo</strong> 中</li>
<li>在 “部署” 下，点“部署”</li>
<li>在 <strong>Mac</strong> 中设置自动代理配置地址为：<code>http://your-subdomain.avosapps.com/proxy.pac</code></li>
</ol>


<p>以后想添加新的网站到翻墙列表，打开你的 <strong>Repo</strong>，在线编辑之后，登录 <strong>AVOSCloud</strong> 再点一次“部署”，重启你的 <strong>Chrome</strong> 即可，不用 ssh 登录到你的 <code>VPS</code> 了。同时，由于 <strong>AVOSCloud</strong> 在国内，访问速度较快，启动时间也没有影响。</p>

<h2>总结</h2>

<p>越是限制，越是激发人的潜能与创造力。以上，我们就用每年 $15 的费用建立起了一个私人的翻墙服务。感谢各个为人类的自由作出贡献的无私开发者，感谢 <strong><a href="https://cn.avoscloud.com">AVOSCloud</a></strong> 提供的免费托管服务。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RTID]]></title>
    <link href="http://rickytan.github.io/blog/2014/06/06/rtid/"/>
    <updated>2014-06-06T01:44:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/06/06/rtid</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p>很多时候我们需要设备的唯一标识符，但自从 <code>iOS 5.0</code> 之后，苹果公司开始限制 <code>[UIDevice currentDevice].uniqueIdentifier</code> 的访问，而现在，这个接口已经被移除，多了一个新的 <code>identifierForVendor</code> 接口。对每个单独的应用，它返回一个唯一的字符串，但是应用删除重装安装后，这个字符串就变了（本人在一个 <code>iOS 6.1.2</code> 越狱设备上测试，可能会有些问题）。这样的话，统计或是作为用户身份登录都会产生问题。</p>

<h3>网卡地址</h3>

<p>读 <code>MAC</code> 地址是个不错的想法<!--more-->，但在目前最新的 <code>iOS 7.0</code> 中返回 <strong>02:00:00:00</strong> ，已经失效。即使是在 <code>iOS 6.0</code> 中，读 <code>MAC</code> 地址也是做为私有接口存在。</p>

<h3>OpenUDID</h3>

<p>这是一个不错的实现，它不依赖 <code>iOS</code> 设备的任何硬件和系统中的 <code>ID</code>，而是随机生成一串字符，并保存在某处。它的限制也很明显，就是当系统升级后，或者所有用到 <code>OpenUDID</code> SDK 的应用都删除了，再安装一个新的用到 <code>OpenUDID</code> 的应用，它返回的 <code>UDID</code> 就变了。</p>

<p>例如，在应用 A 中调用 <code>OpenUDID</code> 接口，返回如下：</p>

<pre><code>3a2ee6eea4d427abcf7e8ce6a0463bfcacf957df
</code></pre>

<p>再安装一个 <em>bundle identifier</em> 不同的应用 B，也返回</p>

<pre><code>3a2ee6eea4d427abcf7e8ce6a0463bfcacf957df
</code></pre>

<p>这时删除 A，返回还是一样。无论关机、重启也好。很大程度上可以保存它是设备的唯一标识。但是这时把 B 也删了了，关机重启，再安装，
就返回一个新的了：</p>

<pre><code>22f76530318d5cdad310dd2d8e89c7c03aebb82b
</code></pre>

<p>这还不算，毕竟用户把所有用到 <code>OpenUDID</code> 的应用全删除可能性不大。问题是，<code>OpenUDID</code> 的实现用到了公共剪切板，而貌似以后苹果将
限制跨应用的剪切板访问，所以最终 <code>OpenUDID</code> 也会失效！</p>

<h2>需求</h2>

<p>我们不一定需要一个设备的唯一标识，我们只要在我们自己的应用中能读到一个<strong>唯一</strong>、<strong>不变</strong>的标识，这样就可以做统计分析，或是<em>无帐号</em>系统的游戏登录（因为有帐号的话，用户很大可能就不去玩了，流失率比较高）。它应该有以下特点：</p>

<ul>
<li>是自己生成的随机串，与系统硬件无关</li>
<li>只生成一次，以后每次打开读到一样的内容</li>
<li>用户删除本应用，然后重装，读到一样的内容</li>
<li>用户升级系统（不是重装系统），仍能读到一样的内容</li>
</ul>


<p>为此，实现了 <code>RTID</code>！</p>

<h2>RTID</h2>

<h3>使用方法</h3>

<p>在你的项目中引入 <code>RTID.h</code>，然后在编译设置中 <code>Other Link Flags</code> 中增加 <code>-ObjC</code>，可能需要添加依赖：</p>

<ul>
<li>Security.framework</li>
</ul>


<p>然后就可以通过以下方式获取一个唯一且不变的 ID：</p>

<pre><code>NSString *rtid = [UIDevice currentDevice].RTID;
</code></pre>

<p>经实测，应用删除后，再重装，此 ID 依然不变。除非，重装系统！</p>

<p><img src="https://github.com/rickytan/RTID/raw/master/Screenshot/s0.png" alt="image" /></p>

<h3>风险</h3>

<p>此实现没有调用苹果的私用接口，但本人仍无法保证用到此代码的应用能顺利上线！如果您用到了，且成功上线了，还请<a href="mailto:ricky.tan.xin@gmail.com?subject=%E6%88%91%E7%9A%84%E5%BA%94%E7%94%A8%E6%88%90%E5%8A%9F%E4%B8%8A%E7%BA%BF">告知</a>一下，谢谢！</p>

<h3>商用</h3>

<p>本项目开源、免费，但如果您在商用软件中用到此代码，请将您的应用下载链接及简介发送到<a href="mailto:ricky.tan.xin@gmail.com?subject=%E6%88%91%E7%94%A8%E5%88%B0%E4%BA%86RTID">此邮箱</a>，本人感激不尽！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP 中读 XML 的一个坑]]></title>
    <link href="http://rickytan.github.io/blog/2014/06/05/the-php-xml-issue/"/>
    <updated>2014-06-05T01:47:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/06/05/the-php-xml-issue</id>
    <content type="html"><![CDATA[<h2>问题</h2>

<p>在做一个微信的 <code>PHP</code> 后台时需要读微信服务器 <code>POST</code> 过来的 <code>XML</code>，然后保存到 <code>Memcache</code> 中。</p>

<figure class='code'><figcaption><span>index.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">public</span> <span class="nx">index</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nv">$postData</span> <span class="o">=</span> <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s2">&quot;HTTP_RAW_POST_DATA&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="nv">$postObj</span> <span class="o">=</span> <span class="nb">simplexml_load_string</span><span class="p">(</span><span class="nv">$postStr</span><span class="p">,</span> <span class="s1">&#39;SimpleXMLElement&#39;</span><span class="p">,</span> <span class="nx">LIBXML_NOCDATA</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">cache</span><span class="o">-&gt;</span><span class="na">memcached</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">(</span><span class="s2">&quot;openid_&quot;</span><span class="o">.</span><span class="nv">$something</span><span class="p">,</span> <span class="nv">$postObj</span><span class="o">-&gt;</span><span class="na">FromUserName</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>怎么也出不来结果，然后发现运行到 <code>save</code> 时有异常<!--more-->，是 <code>Memcache</code> 抛出的，说无法串行化。通过 <code>var_dump</code> 后发现 <code>$postObj-&gt;FromUserName</code> 是个 <code>SimepleXMLElement</code> 类型，而用 <code>var_dump</code> <code>$postObj</code> 时发现是 <code>string</code>！！</p>

<h2>解决方法</h2>

<p>解决方法有多种:</p>

<ol>
<li>强制转换为 <code>string</code></li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">cache</span><span class="o">-&gt;</span><span class="na">memcached</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">(</span><span class="s2">&quot;openid_&quot;</span><span class="o">.</span><span class="nv">$something</span><span class="p">,</span> <span class="p">(</span><span class="nx">string</span><span class="p">)</span><span class="nv">$postObj</span><span class="o">-&gt;</span><span class="na">FromUserName</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>强制转换为 <code>array</code></li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>      <span class="nv">$postData</span> <span class="o">=</span> <span class="nv">$GLOBALS</span><span class="p">[</span><span class="s2">&quot;HTTP_RAW_POST_DATA&quot;</span><span class="p">];;</span>
</span><span class='line'>      <span class="nv">$postObj</span> <span class="o">=</span> <span class="p">(</span><span class="k">array</span><span class="p">)</span><span class="nb">simplexml_load_string</span><span class="p">(</span><span class="nv">$postStr</span><span class="p">,</span> <span class="s1">&#39;SimpleXMLElement&#39;</span><span class="p">,</span> <span class="nx">LIBXML_NOCDATA</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">cache</span><span class="o">-&gt;</span><span class="na">memcached</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">(</span><span class="s2">&quot;openid_&quot;</span><span class="o">.</span><span class="nv">$something</span><span class="p">,</span> <span class="nv">$postObj</span><span class="p">[</span><span class="s2">&quot;FromUserName&quot;</span><span class="p">]);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>转为 <code>stdClass</code></li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>      <span class="nv">$postObj</span> <span class="o">=</span> <span class="nb">simplexml_load_string</span><span class="p">(</span><span class="nv">$postStr</span><span class="p">,</span> <span class="s1">&#39;SimpleXMLElement&#39;</span><span class="p">,</span> <span class="nx">LIBXML_NOCDATA</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$postObj</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nb">json_encode</span><span class="p">(</span><span class="nv">$postObj</span><span class="p">));</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>这个大坑耗去了快两小时！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[代码生成的 UIColor 与在 IB 中填写的颜色 RGB 最终颜色不一致的问题]]></title>
    <link href="http://rickytan.github.io/blog/2014/05/26/uicolor-and-colorpicker-in-ib/"/>
    <updated>2014-05-26T14:58:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/05/26/uicolor-and-colorpicker-in-ib</id>
    <content type="html"><![CDATA[<p>iOS 应用界面的编写，按程序员的习惯可以分为两派：代码党和 <code>IB</code> 党。本人是倾向于 <code>Interface Builder</code> 的，毕竟能少写点就少写点，能用 <code>IB</code> 实现坚决不用代码。</p>

<p>但是在实际使用中，却发现一些问题，这个问题早有发现，我以为只是色差的原因，但是最近发现不那么简单了。</p>

<p>如下图，美术在 <code>PhotoShop</code> 中标了蓝色为 <code>#3689e5</code>，换成 <code>RGB</code> 为 54，137，229，于是在 <code>IB</code> 的颜色中填入此值，但是看到的颜色有差异。</p>

<p><img src="http://rickytan.github.io/images/IB/QQ20140510-1.png" alt="image0" /></p>

<!--more-->


<p><img src="http://rickytan.github.io/images/IB/QQ20140510-2.png" alt="image1" /></p>

<p>这点小差异其实一般人都不会太关心，但后来有一部分功能我不想用 <code>IB</code> 了，于是代码写了个界面，就发现颜色差异不能忍了，代码的颜色是对的，<code>IB</code> 的颜色偏深。</p>

<p>自己写了个 Demo ，截图如下：（这里差别还不是很大，因为我是在 Mac Pro Retian 自己的屏上输入的颜色，当你在外接显示器上用 <code>IB</code> 时，颜色差异十分明显）</p>

<p><img src="http://rickytan.github.io/images/IB/s0.png" alt="image2" /></p>

<p>其中上半部分是用 Color Inspector 输入的值：</p>

<p><img src="http://rickytan.github.io/images/IB/s1.png" alt="image3" /></p>

<p>可以对比下第 2 张图，与上面这张图，第 2 张图是在外接显示器上输入的，颜色差异之大，不可能是由 228 与 229 造成的！</p>

<p>我一再强调了显示器的不同，对，其实看到这里大家已经猜到，这种不同就来自显示器。点开 <code>RGB Sliders</code> 左边的按钮（我之前都不知道它能点的……），可以看到多种显示器配置文件</p>

<p><img src="http://rickytan.github.io/images/IB/color-picker.png" alt="image4" /></p>

<p>选择 <code>Generic RGB</code>，然后三个值会变掉，不管它，你自己再改成 54 137 229。这时它在这个显示器上显示的颜色可能与你要的不对，但是运行时，在模拟器上显示的就与代码无差别了！</p>

<p><img src="http://rickytan.github.io/images/IB/s3.png" alt="image5" /></p>

<p>可以用 Mac 自带的 <em>数码测色计</em> 来验证，注意要选 <strong>显示原生值</strong>！</p>

<p>个人的理解，每个显示器在制造时就会有色偏，为了纠正这种色偏，在出厂时会调好一个配置文件，指定显示器在显示 240 这个颜色时（打个比方），你应该显示 248 才能让人的眼睛看着是 240，即显示器上显示的颜色是在原生值上纠偏过的，而<em>数码测色计</em>取的的显示器上的原生值，即 248，显示器根本不知道 240 的存在。这就是为什么用取色的方式总有色差了。</p>

<p>附 <a href="http://stackoverflow.com/questions/7488378/weird-colors-in-xcode-interface-builder">StackOverflow</a> 上的链接 <a href="http://stackoverflow.com/questions/7488378/weird-colors-in-xcode-interface-builder">http://stackoverflow.com/questions/7488378/weird-colors-in-xcode-interface-builder</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何为您的站点请求一个免费的ssl证书？]]></title>
    <link href="http://rickytan.github.io/blog/2014/03/01/how-to-request-a-free-ssl-certificate-for-your-website/"/>
    <updated>2014-03-01T02:39:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/03/01/how-to-request-a-free-ssl-certificate-for-your-website</id>
    <content type="html"><![CDATA[<h3>SSL证书</h3>

<p>关于什么是<code>SSL</code>证书请自行<code>Google</code>，你的每次<code>https</code>请求，都有一个证书在幕后做支持，它为网络上的服务器之间建立起了信任，保障了每次线上交易、浏览的安全。</p>

<h2>Class</h2>

<p><code>SSL</code>证书分为三个类别，即<strong>Class 1</strong>、<strong>Class 2</strong>、<strong>Class 3</strong>。</p>

<ol>
<li><strong>Class 1</strong>：</li>
<li><strong>Class 2</strong>：</li>
<li><strong>Class 3</strong>：</li>
</ol>


<h2>StartSSL</h2>

<p>一般情况下，<code>SSL</code>证书价格不菲，个人的小站点、小企业可能无力承担这笔费用<!--more-->，但是<a href="https://startssl.com">StartSSL</a>为我们免费提供了一年有效期的<strong>Class 1</strong>证书的申请，并且可以无限续期！</p>

<h3>如何申请</h3>

<blockquote><p>算了，网上关于 <a href="https://startssl.com">StartSSL</a> 的文章太多了，自己搜吧，不写了……</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 下如何复制一个视图（包括它的所有属性）]]></title>
    <link href="http://rickytan.github.io/blog/2014/02/20/how-to-copy-a-view-and-its-all-attribute-in-ios/"/>
    <updated>2014-02-20T02:43:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/02/20/how-to-copy-a-view-and-its-all-attribute-in-ios</id>
    <content type="html"><![CDATA[<p>在某些效果中，我们需要在当前视图上创建一个新的、一样的视图，并且叠在老的上面，然后让新的视图移动、缩放，或什么的，这样做出来的动画看起来比较流畅。对于简单的界面，我们可能按原有的样子生成一个新的就好，有没有更好更通用的办法呢？</p>

<h1>NSCoding</h1>

<p><code>UIView</code>无法通过<code>copy</code>方法来创建一个副本，这个想必大家都已经试过了。事实上，<code>UIView</code>是服从<NSCoding>协议的，这样它才能从<code>Xib</code>中反序列化出来，而我们最常用的一个序列化类就是<code>NSKeyedArchiver</code>。</p>

<!--more-->


<p>所以创建一个视图的副本可以这样：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UIView</span> <span class="o">*</span><span class="n">view</span> <span class="o">=</span> <span class="p">...;</span>
</span><span class='line'><span class="n">UIView</span> <span class="o">*</span><span class="n">copy_view</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSKeyedUnarchiver</span> <span class="nl">unarchiveObjectWithData:</span><span class="p">[</span><span class="n">NSKeyedArchiver</span> <span class="nl">archivedDataWithRootObject:</span><span class="n">view</span><span class="p">]];</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样，视图中所有能通过<code>Xib</code>设置的属性（底色、字体、Frame等）全部复制到新的视图上了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 下如何设置全局字体？]]></title>
    <link href="http://rickytan.github.io/blog/2014/02/20/global-font-of-ios/"/>
    <updated>2014-02-20T01:52:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/02/20/global-font-of-ios</id>
    <content type="html"><![CDATA[<h1>背景</h1>

<p><code>iOS 6</code>跟 <code>iOS 7</code>的字体还是有点不一样的，有时候为了两者的统一，或者，应设计师的要求，界面中所有的 Label，Button 等都用自定义字体，一般来说，我们在初始化的时候就需要不断地添加冗余的代码来设置自己的字体。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UILabel</span> <span class="o">*</span><span class="n">label</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UILabel</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="n">label</span><span class="p">.</span><span class="n">font</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIFont</span> <span class="nl">fontWithName:</span><span class="s">@&quot;myFont&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果你的界面全部是代码实现的，而且项目初期就已经定下统一用什么字体了，这就不是什么难事。但是，试想，如果你的界面是由大量<code>IB</code>实现的，而且用的是自定义的字体，在<code>IB</code>中选都没法选；或是项目已经完成差不多了，上面要求统一改字体，那该如何是好？</p>

<!--more-->


<p>其实利用<code>objective-c</code>的动态性就可以轻松搞定。</p>

<h1>Method swizzling</h1>

<p>什么是<code>Method Swizzling</code>请<code>Google</code>之，这里只说明方法：</p>

<p><strong>注意：</strong> <em>以下方法只用于全局修改由 <code>Xib</code> 加载的界面的 UIButton, UILabel的字体，其他的如UITextField等类似，新建Catogery就好，想修改代码生成的界面，修改 initWithCoder 为 init就好</em></p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'><span class="cp">#import &lt;objc/runtime.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">UIButton</span> <span class="nl">(myFont)</span> <span class="k">@end</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">UILabel</span> <span class="nl">(myFont)</span> <span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">UIButton</span> <span class="nl">(myFont)</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">load</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Method</span> <span class="n">imp</span> <span class="o">=</span> <span class="n">class_getInstanceMethod</span><span class="p">([</span><span class="n">self</span> <span class="n">class</span><span class="p">],</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">initWithCoder:</span><span class="p">));</span>
</span><span class='line'>    <span class="n">Method</span> <span class="n">myImp</span> <span class="o">=</span> <span class="n">class_getInstanceMethod</span><span class="p">([</span><span class="n">self</span> <span class="n">class</span><span class="p">],</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">myInitWithCoder:</span><span class="p">));</span>
</span><span class='line'>    <span class="n">method_exchangeImplementations</span><span class="p">(</span><span class="n">imp</span><span class="p">,</span> <span class="n">myImp</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">myInitWithCoder:</span><span class="p">(</span><span class="n">NSCoder</span><span class="o">*</span><span class="p">)</span><span class="nv">aDecode</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">myInitWithCoder:</span><span class="n">aDecode</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">CGFloat</span> <span class="n">fontSize</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">titleLabel</span><span class="p">.</span><span class="n">font</span><span class="p">.</span><span class="n">pointSize</span><span class="p">;</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">titleLabel</span><span class="p">.</span><span class="n">font</span> <span class="o">=</span> <span class="o">&lt;</span><span class="err">#</span> <span class="n">Your</span> <span class="n">Font</span> <span class="n">Here</span> <span class="err">#</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">UILabel</span> <span class="nl">(myFont)</span>
</span><span class='line'>
</span><span class='line'><span class="k">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">load</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">Method</span> <span class="n">imp</span> <span class="o">=</span> <span class="n">class_getInstanceMethod</span><span class="p">([</span><span class="n">self</span> <span class="n">class</span><span class="p">],</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">initWithCoder:</span><span class="p">));</span>
</span><span class='line'>    <span class="n">Method</span> <span class="n">myImp</span> <span class="o">=</span> <span class="n">class_getInstanceMethod</span><span class="p">([</span><span class="n">self</span> <span class="n">class</span><span class="p">],</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">myInitWithCoder:</span><span class="p">));</span>
</span><span class='line'>    <span class="n">method_exchangeImplementations</span><span class="p">(</span><span class="n">imp</span><span class="p">,</span> <span class="n">myImp</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">myInitWithCoder:</span><span class="p">(</span><span class="n">NSCoder</span><span class="o">*</span><span class="p">)</span><span class="nv">aDecode</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="nl">myInitWithCoder:</span><span class="n">aDecode</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">CGFloat</span> <span class="n">fontSize</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">font</span><span class="p">.</span><span class="n">pointSize</span><span class="p">;</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">font</span> <span class="o">=</span> <span class="o">&lt;</span><span class="err">#</span> <span class="n">Your</span> <span class="n">Font</span> <span class="n">Here</span> <span class="err">#</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[蛐蛐儿 SDK 破解]]></title>
    <link href="http://rickytan.github.io/blog/2014/01/18/crack-xququer/"/>
    <updated>2014-01-18T15:23:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2014/01/18/crack-xququer</id>
    <content type="html"><![CDATA[<p><a href="http://xququ.com">蛐蛐儿</a> 是一套利用声音传输信息的解决方案，大家可能知道 <code>支付宝</code> 在早些时候就推出了当面付的功能，其实就是利用超声波将加密后的支付信息传输给附近的人。蛐蛐儿SDK可以在其官网上下载到，通过它的提供的Demo可以看出，它需要将一段任意字符串<em>S</em>上传它们的后台，然后生成一段16字节的<em>Token</em>，发送时只能发送此<em>Token</em>。同时，在接收方接收到<em>Token</em>后，需要访问它们的后台把原始字符串<em>S</em>下载下来。这个过程也正好解释了，为什么无论发送什么东西，声音长度是一致的，真正的数据并不是通过声音传的，而是通过网络下载的。</p>

<p>当然，其实大部分情况下这个过程已经够用了，因为开发者可以将自己需要传输的任何字符串编码为<em>Token</em>（这个字符串可以是<code>BASE64</code>编码，也可以是一个文件的下载链接），通过声音传输，然后再解码。</p>

<!--more-->




<figure class='code'><figcaption><span>viewcontroller.m </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">XQuquerService</span> <span class="n">defaultService</span><span class="p">]</span> <span class="nl">setDelegate:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">XQuquerService</span> <span class="n">defaultService</span><span class="p">]</span> <span class="n">start</span><span class="p">];</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="p">...;</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">XQuquerService</span> <span class="n">defaultService</span><span class="p">]</span> <span class="nl">uploadData:</span><span class="n">str</span><span class="p">];</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#prama mark XQuquer Delegate</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didSendDataToken</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveDataToken:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">dataToken</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是如何我要传输的字符少于16位呢？这个过程似乎有点过了，于是我将<em>Token</em>改为任意一个我想要传输的字符串，发现没有声音了。原来这个<em>Token</em>并不是一个随机的值。原来我以为，SDK的后台就一张表，记录着<em>Token</em>和原始值的对应关系，而<em>Token</em>本身是随机的，或者就像短链接一样，将太长的内容变短而已。</p>

<p><em>Token</em>的生成引起了我的兴趣，于是我记下了一些能发送的<em>Token</em>，如：</p>

<pre><code>020240d3d0d42a48
</code></pre>

<p>改动任何字符均会导致没有声音，所以猜测这个<em>Token</em>本身带有验证机制。于是后来就跟踪到汇编代码想看看它的验证过程，这样我好自己生成<em>Token</em>。跟踪过程我就不细说了，反正中间出现过一段字符串：<strong>0003242ddd4082a4</strong>，我对照了一下，没有什么规律，然后又出现了<strong>0003242dddwuyifan</strong>，对比下SDK 的作者，正是 <strong>wu yifan</strong>，而这里他将后6位换成自己名字拼音做什么呢？</p>

<p>对于这两段 <em>Token</em> ：</p>

<pre><code>A = 020240d3d0d42a48
B = 0003242ddd4082a4
</code></pre>

<p>它们等长，同时 <em>A</em> 中出现过的字符 <em>B</em> 中也同样出现，并且词频是一样的！
在然后的几次单指令跟踪时，发现变量名中出过过 <code>dkey</code> 和 <code>ekey</code>，应该是 <code>decode</code> 和 <code>encode</code> ，检查内存，发现它们是 <code>int[16]</code> 的数组，这才发现 <em>A</em> 到 <em>B</em> 就是一个简单映射：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">const</span> <span class="kt">int</span> <span class="n">dkey</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">char</span> <span class="n">A</span><span class="p">[</span><span class="mi">16</span><span class="p">]</span> <span class="o">=</span> <span class="s">&quot;020240d3d0d42a48&quot;</span><span class="p">;</span>
</span><span class='line'><span class="kt">char</span> <span class="n">B</span><span class="p">[</span><span class="mi">17</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">16</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">B</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">A</span><span class="p">[</span><span class="n">dkey</span><span class="p">[</span><span class="n">i</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这个问题解决了，那作者自己的名字拼音是怎么回事呢？还有那段被替换的后6位？在后来的跟踪中，发现代码有调用 <code>MD5</code> ，参数是替换成名字拼音的字符！</p>

<pre><code>MD5("0003242dddwuyifan") = "4082a4f05d45574077b88a53965a7293"
</code></pre>

<p>这货的前6位，不就是 <em>B</em> 的后6位吗？到此， <em>Token</em> 的验证过程已经非常清楚了：</p>

<pre><code>Token = "...";              // 原始 Token
Token' = decode(Token);     // 用 dkey 解密的 Token
Prefix = Token'[0, 10];     // 前 10 位
Subfix = Token'[10, 6];     // 后 6 位

if (Subfix == MD5(Prefix + "wuyifan")[0, 6])
    return TRUE;
return FALSE;
</code></pre>

<p>所以，我要自己生成 <em>Token</em> 那就是它的反过程了！</p>

<pre><code>MyValue = "...";            // 必须 10 位长
Subfix = MD5(MyValue + "wuyifan")[0, 6];
Token = encode(MyValue + Subfix);

return Token;
</code></pre>

<p>用代码测试了下，有些生成的 <em>Token</em> 可以发送，有些不行。原来它声音发送的数据还有一点要求，<code>MyValue</code> 必须是 16 进制的字符 0~f，并且第1位是0~7，总的来说，一次只能通过声音传5字节不到的数据。</p>

<pre><code>出于保护的目的，dkey ekey 就不公布出来了，感兴趣的可以私下联系。另外，如果`蛐蛐儿`的开发者认为此
文章不合适也请联系本人删除。
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iZJU中浙大黄页的实现]]></title>
    <link href="http://rickytan.github.io/blog/2013/06/16/izjuzhong-zhe-da-huang-ye-de-shi-xian/"/>
    <updated>2013-06-16T11:33:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2013/06/16/izjuzhong-zhe-da-huang-ye-de-shi-xian</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>用过<a href="https://itunes.apple.com/cn/app/izju/id573810521?mt=8">iZJU iOS</a>版的同学应该会注意到，在2.1.1版本之后新增了“浙大黄页”的功能。</p>

<p><img src="http://rickytan.github.io/images/screenshot20130616.png" alt="iZJU" /></p>

<p>这个功能是原先“紧急电话”的加强版，细心的同学会知道，所有的电话号码数据来自“浙大电话黄页”网站（<a href="http://zjutel.zju.edu.cn">http://zjutel.zju.edu.cn</a>），如下图：</p>

<p><img src="http://rickytan.github.io/images/QQ20130616-1.png" alt="浙大黄页" /></p>

<h2>数据获取</h2>

<p>网站管理员我不熟，他也不会主动给我数据，获取这个唯一的办法就是抓取了。但是网站数据没有一次列全，自己点开哪个就能看到哪个，如何一次性抓到所有数据？人工去点开吧，嗯，一开始我是这么想的，可是后来发现能展开的节点太多了，自己点太蛋疼了。于是就想到了让浏览器自动点。</p>

<p>于是乎花了些时间写了个Chrome 小插件，如果还有节点，点开那个节点链接，否则无动作。
主要代码如下，通过一张小gif 图来判断是否可以展开：</p>

<!--more-->




<figure class='code'><figcaption><span>index.user.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">open</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">img</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;font&quot;</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">img</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">v</span><span class="p">){</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">src</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;w.gif&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">p1</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;tr&quot;</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;td&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">p2</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">parents</span><span class="p">(</span><span class="s2">&quot;tr&quot;</span><span class="p">).</span><span class="nx">next</span><span class="p">().</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;td&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">p1</span> <span class="o">&gt;=</span> <span class="nx">p2</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">c</span> <span class="o">=</span> <span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">attributes</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">urlS</span> <span class="o">=</span> <span class="nx">c</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">textContent</span><span class="p">;</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">idx</span> <span class="o">=</span> <span class="nx">urlS</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">urlS</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">idx</span><span class="p">,</span> <span class="nx">urlS</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="nx">idx</span> <span class="o">-</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>                <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">a</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">url</span><span class="p">;</span>
</span><span class='line'>                <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">a</span><span class="p">.</span><span class="nx">click</span><span class="p">();</span>
</span><span class='line'>                <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">open</span><span class="p">,</span> <span class="mi">300</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>打包为.crx 后<strong><a href="http://rickytan.github.io/download/zjutel.crx">安装</a></strong>，在Chrome访问<a href="http://zjutel.zju.edu.cn/tree.php">http://zjutel.zju.edu.cn/tree.php</a>，插件就开始工作了，这时你可以坐下来喝喝咖啡，等它停止。</p>

<p>停止之后，将整个网页下载下来，可以用<code>Vim</code>等文本编辑器用搜索替换的方式去除HTML标签等不必要的信息，最终整理成如下所示文本文件（tree.txt）：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>!+ 浙江大学
</span><span class='line'>!!+ 党委正 副书记(秘书)
</span><span class='line'>!!! 党委书记秘书 : 88981739
</span><span class='line'>!!! 邹晓东副书记联系秘书 : 88981457
</span><span class='line'>!!! 郑强副书记联系秘书 : 88981175
</span><span class='line'>!!! 任少波副书记联系秘书 : 88981062
</span><span class='line'>!!! 周谷平 : 
</span><span class='line'>!!+ 校长 副校长(秘书)
</span><span class='line'>!!! 杨卫校长秘书 : 88981109
</span><span class='line'>!!! 来茂德副校长联系秘书 : 88981217
</span><span class='line'>......</span></code></pre></td></tr></table></div></figure>


<p>以上文本，既包含了节点信息，又有节点间的层次关系。下面将说明如何处理它让它成为结构化的数据。</p>

<h2>数据处理</h2>

<p>观察上述文本的格式，以“＋”号结尾的都是有子部门的大部门，而没有“＋”的则是有电话信息的叶节点，同时“！”号的个数
表明了它所处的层级。
为了方便处理，抽象出两个数据模型：Node，Number。Node 指所有部门节点，而Number是叶节点的电话信息。可以想见只有叶节点才能有电话信息，但叶节点不一定有电话信息。</p>

<p>建立数据表如下：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">USE</span> <span class="n">zjutel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">IF</span> <span class="k">NOT</span> <span class="k">EXISTS</span> <span class="o">`</span><span class="n">Node</span><span class="o">`</span> <span class="p">(</span>
</span><span class='line'>    <span class="o">`</span><span class="n">id</span><span class="o">`</span>          <span class="nb">INT</span> <span class="n">auto_increment</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">COMMENT</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">`</span><span class="n">pid</span><span class="o">`</span>         <span class="nb">INT</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="mi">0</span> <span class="k">COMMENT</span> <span class="s1">&#39;父节点id&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">`</span><span class="n">title</span><span class="o">`</span>       <span class="nb">varchar</span><span class="p">(</span><span class="mi">128</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">COMMENT</span> <span class="s1">&#39;节点标题&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">`</span><span class="n">has_child</span><span class="o">`</span>   <span class="n">bool</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="k">FALSE</span> <span class="k">COMMENT</span> <span class="s1">&#39;是否有子节点&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">`</span><span class="n">is_leaf</span><span class="o">`</span>     <span class="n">bool</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="k">FALSE</span> <span class="k">COMMENT</span> <span class="s1">&#39;是否为叶节点，叶节点一定有电话号码&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">`</span><span class="n">create_date</span><span class="o">`</span> <span class="k">timestamp</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="s1">&#39;0000-00-00 00:00:00&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="o">`</span><span class="n">update_date</span><span class="o">`</span> <span class="k">timestamp</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="k">CURRENT_TIMESTAMP</span> <span class="k">ON</span> <span class="k">UPDATE</span> <span class="k">CURRENT_TIMESTAMP</span><span class="p">,</span>
</span><span class='line'>    <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="p">),</span>
</span><span class='line'>  <span class="k">KEY</span> <span class="p">(</span><span class="o">`</span><span class="n">title</span><span class="o">`</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span><span class="k">default</span> <span class="n">charset</span><span class="o">=</span><span class="n">UTF8</span> <span class="n">engine</span><span class="o">=</span><span class="n">InnoDB</span><span class="p">,</span><span class="n">AUTO_INCREMENT</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">IF</span> <span class="k">NOT</span> <span class="k">EXISTS</span> <span class="o">`</span><span class="nb">Number</span><span class="o">`</span> <span class="p">(</span>
</span><span class='line'>    <span class="o">`</span><span class="n">id</span><span class="o">`</span>          <span class="nb">INT</span> <span class="n">auto_increment</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="o">`</span><span class="n">nid</span><span class="o">`</span>         <span class="nb">INT</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>    <span class="o">`</span><span class="nb">number</span><span class="o">`</span>      <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="p">),</span>
</span><span class='line'>    <span class="k">FOREIGN</span> <span class="k">KEY</span><span class="p">(</span><span class="o">`</span><span class="n">nid</span><span class="o">`</span><span class="p">)</span> <span class="k">REFERENCES</span> <span class="o">`</span><span class="n">Node</span><span class="o">`</span><span class="p">(</span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="p">)</span> <span class="k">ON</span> <span class="k">DELETE</span> <span class="k">CASCADE</span><span class="p">,</span>
</span><span class='line'>  <span class="k">KEY</span> <span class="p">(</span><span class="o">`</span><span class="n">nid</span><span class="o">`</span><span class="p">),</span>
</span><span class='line'>  <span class="k">KEY</span> <span class="p">(</span><span class="o">`</span><span class="nb">number</span><span class="o">`</span><span class="p">)</span>
</span><span class='line'><span class="p">)</span><span class="k">default</span> <span class="n">charset</span><span class="o">=</span><span class="n">UTF8</span> <span class="n">engine</span><span class="o">=</span><span class="n">InnoDB</span> <span class="n">AUTO_INCREMENT</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后简单地写了个PHP脚本来处理，并存入数据库。更具体的信息，请访问Github Repo: <a href="https://github.com/rickytan/YellowPage">https://github.com/rickytan/YellowPage</a>，所有源代码都是开放的！zjutel.db 是处理好之后的 <code>Sqlite</code> 数据库，可以直接在手机等中使用。</p>

<p>此电话信息的更多利用价值，有待大家一起挖掘！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开始！Hello Markdown]]></title>
    <link href="http://rickytan.github.io/blog/2013/06/06/kai-shi-%21hello-markdown/"/>
    <updated>2013-06-06T13:50:00+08:00</updated>
    <id>http://rickytan.github.io/blog/2013/06/06/kai-shi-!hello-markdown</id>
    <content type="html"><![CDATA[<p><strong>新的开始</strong></p>

<p>在<a href="http://biaobiaoqi.me">biaobiaoqi</a>的影响下，开始学着高端洋气一点，利用
<a href="http://pages.github.com">Github Pages</a>和<a href="http://octopress.org">Octopress</a>框架
搭起了自己的博客系统，但是此系统是纯静态页面组成的，写作用的是<strong>Markdown</strong>，自己并不熟悉。以这种方
式写页面还是第一次，真的不一样的体验，有点技术极客的感觉。万事开头难，就以此文作为<strong>Markdown</strong>写作
的开端吧！</p>

<p>本文以熟悉<strong>Markdown</strong>语法为目的，算是先练练手。</p>

<!--more-->


<p><strong>标题</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 这是一级标题
</span><span class='line'>## 这是二级标题
</span><span class='line'>### 这是三级标题
</span><span class='line'>......(依此类推</span></code></pre></td></tr></table></div></figure>


<h1>这是一级标题</h1>

<h2>这是二级标题</h2>

<h3>这是三级标题</h3>

<p>当然也有另外的写法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>这是一级标题
</span><span class='line'>======
</span><span class='line'>这是二级标题
</span><span class='line'>------</span></code></pre></td></tr></table></div></figure>


<h1>这是一级标题</h1>

<h2>这是二级标题</h2>

<p><strong>段落</strong></p>

<p>段落就是一些连续的文字，只要不出现空行（只有空格和Tab的行），Markdown就会认为是同一段，所以在你的文本编辑器中，一段文字太长，大可以回车另起一段。</p>

<p><strong>引用</strong></p>

<p>像邮件中一样，Markdown的引用以<strong>></strong>开头</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>> 这是一段引用文字。。。
</span><span class='line'>> 你会发现，回车后**Vim**会自动在新行前加上**>**</span></code></pre></td></tr></table></div></figure>


<blockquote><p>这是一段引用文字。。。
你会发现，回车后<strong>Vim</strong>会自动在新行前加上<strong>></strong></p></blockquote>

<p><strong>列表</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* 列表项
</span><span class='line'>* 列表项
</span><span class='line'>* 列表项
</span><span class='line'>+ 列表项
</span><span class='line'>+ 列表项
</span><span class='line'>+ 列表项
</span><span class='line'>- 列表项
</span><span class='line'>- 列表项
</span><span class='line'>- 列表项</span></code></pre></td></tr></table></div></figure>


<p>以上列表样式是一样的。</p>

<ul>
<li>列表项</li>
<li>列表项</li>
<li>列表项</li>
</ul>


<p>有序号的列表，用数字+. 构成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. 这是1
</span><span class='line'>2. 这是2
</span><span class='line'>8. 这是3</span></code></pre></td></tr></table></div></figure>


<p>你会发现，数字不会影响Markdown最终的样式。</p>

<ol>
<li>这是1</li>
<li>这是2</li>
<li>这是3</li>
</ol>


<p><strong>代码段</strong></p>

<p>简单地，一个Tab或缩进四个空格即可。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>int main() {
</span><span class='line'>      printf("Hello World!\n");
</span><span class='line'>      return 0;
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>


<p>同样，<strong>Vim</strong>会自动在新行上加上四个空格！</p>

<pre><code>int main() {
    printf("Hello World!\n");
    return 0;
}
</code></pre>

<p>另外，Octopress 有更强大的插件可以突现代码，如你看到的各种有序号开头的部分，可以使用 <code>codeblock</code> 和
<code>endcodeblock</code> 将代码包起来，在生成博客时，会自动加亮。</p>

<figure class='code'><figcaption><span>这是一小段C程序 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="err">\</span><span class="p">{</span><span class="err">\</span><span class="o">%</span> <span class="n">codeblock</span> <span class="err">这是一小段</span><span class="n">C</span><span class="err">程序</span> <span class="n">lang</span><span class="o">:</span><span class="n">c</span> <span class="err">\</span><span class="o">%</span><span class="err">\</span><span class="p">}</span>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Hello World!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="err">\</span><span class="p">{</span><span class="err">\</span><span class="o">%</span> <span class="n">endcodeblock</span> <span class="err">\</span><span class="o">%</span><span class="err">\</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>加上<em>lang:c</em>以告诉插件以何种语法高亮代码。</p>

<p><strong>链接</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>这里有一个[链接](http://www.google.com "Google")
</span><span class='line'>&lt;http://www.google.com></span></code></pre></td></tr></table></div></figure>


<p>这里有一个<a href="http://www.google.com" title="Google">链接</a>
<a href="http://www.google.com">http://www.google.com</a></p>

<p><strong>加粗</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*加粗*
</span><span class='line'>**加粗**
</span><span class='line'>_加粗_
</span><span class='line'>__加粗__</span></code></pre></td></tr></table></div></figure>


<p><em>加粗</em>
<strong>加粗</strong>
<em>加粗</em>
<strong>加粗</strong></p>

<p><strong>图片</strong></p>

<p>跟链接的写法类似，不过以!开头</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>![图片替代文字](https://www.google.com/images/srpr/logo4w.png "Google")</span></code></pre></td></tr></table></div></figure>


<p><img src="https://www.google.com/images/srpr/logo4w.png" title="Google" alt="图片替代文字" /></p>
]]></content>
  </entry>
  
</feed>
