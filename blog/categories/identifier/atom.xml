<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Identifier | I'm Ricky -- 个人主页]]></title>
  <link href="http://rickytan.cn/blog/categories/identifier/atom.xml" rel="self"/>
  <link href="http://rickytan.cn/"/>
  <updated>2019-03-25T21:43:12+08:00</updated>
  <id>http://rickytan.cn/</id>
  <author>
    <name><![CDATA[Ricky]]></name>
    <email><![CDATA[ricky.tan.xin@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RTID]]></title>
    <link href="http://rickytan.cn/blog/2014/06/06/rtid/"/>
    <updated>2014-06-06T01:44:00+08:00</updated>
    <id>http://rickytan.cn/blog/2014/06/06/rtid</id>
    <content type="html"><![CDATA[<h2>背景</h2>

<p>很多时候我们需要设备的唯一标识符，但自从 <code>iOS 5.0</code> 之后，苹果公司开始限制 <code>[UIDevice currentDevice].uniqueIdentifier</code> 的访问，而现在，这个接口已经被移除，多了一个新的 <code>identifierForVendor</code> 接口。对每个单独的应用，它返回一个唯一的字符串，但是应用删除重装安装后，这个字符串就变了（本人在一个 <code>iOS 6.1.2</code> 越狱设备上测试，可能会有些问题）。这样的话，统计或是作为用户身份登录都会产生问题。</p>

<h3>网卡地址</h3>

<p>读 <code>MAC</code> 地址是个不错的想法<!--more-->，但在目前最新的 <code>iOS 7.0</code> 中返回 <strong>02:00:00:00</strong> ，已经失效。即使是在 <code>iOS 6.0</code> 中，读 <code>MAC</code> 地址也是做为私有接口存在。</p>

<h3>OpenUDID</h3>

<p>这是一个不错的实现，它不依赖 <code>iOS</code> 设备的任何硬件和系统中的 <code>ID</code>，而是随机生成一串字符，并保存在某处。它的限制也很明显，就是当系统升级后，或者所有用到 <code>OpenUDID</code> SDK 的应用都删除了，再安装一个新的用到 <code>OpenUDID</code> 的应用，它返回的 <code>UDID</code> 就变了。</p>

<p>例如，在应用 A 中调用 <code>OpenUDID</code> 接口，返回如下：</p>

<pre><code>3a2ee6eea4d427abcf7e8ce6a0463bfcacf957df
</code></pre>

<p>再安装一个 <em>bundle identifier</em> 不同的应用 B，也返回</p>

<pre><code>3a2ee6eea4d427abcf7e8ce6a0463bfcacf957df
</code></pre>

<p>这时删除 A，返回还是一样。无论关机、重启也好。很大程度上可以保存它是设备的唯一标识。但是这时把 B 也删了了，关机重启，再安装，
就返回一个新的了：</p>

<pre><code>22f76530318d5cdad310dd2d8e89c7c03aebb82b
</code></pre>

<p>这还不算，毕竟用户把所有用到 <code>OpenUDID</code> 的应用全删除可能性不大。问题是，<code>OpenUDID</code> 的实现用到了公共剪切板，而貌似以后苹果将
限制跨应用的剪切板访问，所以最终 <code>OpenUDID</code> 也会失效！</p>

<h2>需求</h2>

<p>我们不一定需要一个设备的唯一标识，我们只要在我们自己的应用中能读到一个<strong>唯一</strong>、<strong>不变</strong>的标识，这样就可以做统计分析，或是<em>无帐号</em>系统的游戏登录（因为有帐号的话，用户很大可能就不去玩了，流失率比较高）。它应该有以下特点：</p>

<ul>
<li>是自己生成的随机串，与系统硬件无关</li>
<li>只生成一次，以后每次打开读到一样的内容</li>
<li>用户删除本应用，然后重装，读到一样的内容</li>
<li>用户升级系统（不是重装系统），仍能读到一样的内容</li>
</ul>


<p>为此，实现了 <code>RTID</code>！</p>

<h2>RTID</h2>

<h3>使用方法</h3>

<p>在你的项目中引入 <code>RTID.h</code>，然后在编译设置中 <code>Other Link Flags</code> 中增加 <code>-ObjC</code>，可能需要添加依赖：</p>

<ul>
<li>Security.framework</li>
</ul>


<p>然后就可以通过以下方式获取一个唯一且不变的 ID：</p>

<pre><code>NSString *rtid = [UIDevice currentDevice].RTID;
</code></pre>

<p>经实测，应用删除后，再重装，此 ID 依然不变。除非，重装系统！</p>

<p><img src="https://github.com/rickytan/RTID/raw/master/Screenshot/s0.png" alt="image" /></p>

<h3>风险</h3>

<p>此实现没有调用苹果的私用接口，但本人仍无法保证用到此代码的应用能顺利上线！如果您用到了，且成功上线了，还请<a href="mailto:ricky.tan.xin@gmail.com?subject=%E6%88%91%E7%9A%84%E5%BA%94%E7%94%A8%E6%88%90%E5%8A%9F%E4%B8%8A%E7%BA%BF">告知</a>一下，谢谢！</p>

<h3>商用</h3>

<p>本项目开源、免费，但如果您在商用软件中用到此代码，请将您的应用下载链接及简介发送到<a href="mailto:ricky.tan.xin@gmail.com?subject=%E6%88%91%E7%94%A8%E5%88%B0%E4%BA%86RTID">此邮箱</a>，本人感激不尽！</p>
]]></content>
  </entry>
  
</feed>
