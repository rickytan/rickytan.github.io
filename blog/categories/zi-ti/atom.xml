<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 字体 | I'm Ricky -- 个人主页]]></title>
  <link href="http://rickytan.cn/blog/categories/zi-ti/atom.xml" rel="self"/>
  <link href="http://rickytan.cn/"/>
  <updated>2016-10-28T21:21:15+08:00</updated>
  <id>http://rickytan.cn/</id>
  <author>
    <name><![CDATA[Ricky]]></name>
    <email><![CDATA[ricky.tan.xin@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS 下如何设置全局字体？]]></title>
    <link href="http://rickytan.cn/blog/2014/02/20/global-font-of-ios/"/>
    <updated>2014-02-20T01:52:00+08:00</updated>
    <id>http://rickytan.cn/blog/2014/02/20/global-font-of-ios</id>
    <content type="html"><![CDATA[<h1>背景</h1>

<p><code>iOS 6</code>跟 <code>iOS 7</code>的字体还是有点不一样的，有时候为了两者的统一，或者，应设计师的要求，界面中所有的 Label，Button 等都用自定义字体，一般来说，我们在初始化的时候就需要不断地添加冗余的代码来设置自己的字体。</p>

<p>{% codeblock lang:objc %}
UILabel *label = [[UILabel alloc] init];
label.font = [UIFont fontWithName:@&ldquo;myFont&rdquo;];
&hellip;</p>

<p>{% endcodeblock %}</p>

<p>如果你的界面全部是代码实现的，而且项目初期就已经定下统一用什么字体了，这就不是什么难事。但是，试想，如果你的界面是由大量<code>IB</code>实现的，而且用的是自定义的字体，在<code>IB</code>中选都没法选；或是项目已经完成差不多了，上面要求统一改字体，那该如何是好？</p>

<!--more-->


<p>其实利用<code>objective-c</code>的动态性就可以轻松搞定。</p>

<h1>Method swizzling</h1>

<p>什么是<code>Method Swizzling</code>请<code>Google</code>之，这里只说明方法：</p>

<p><strong>注意：</strong> <em>以下方法只用于全局修改由 <code>Xib</code> 加载的界面的 UIButton, UILabel的字体，其他的如UITextField等类似，新建Catogery就好，想修改代码生成的界面，修改 initWithCoder 为 init就好</em></p>

<p>{% codeblock lang:objc %}</p>

<h1>import &lt;UIKit/UIKit.h></h1>

<h1>import &lt;objc/runtime.h></h1>

<p>@interface UIButton (myFont) @end
@interface UILabel (myFont) @end</p>

<p>@implementation UIButton (myFont)</p>

<ul>
<li><p>(void)load
{
  Method imp = class_getInstanceMethod([self class], @selector(initWithCoder:));
  Method myImp = class_getInstanceMethod([self class], @selector(myInitWithCoder:));
  method_exchangeImplementations(imp, myImp);
}</p></li>
<li><p>(id)myInitWithCoder:(NSCoder*)aDecode
{
  [self myInitWithCoder:aDecode];
  if (self) {
      CGFloat fontSize = self.titleLabel.font.pointSize;
      self.titleLabel.font = &lt;# Your Font Here #>;
  }
  return self;
}</p></li>
</ul>


<p>@end</p>

<p>@implementation UILabel (myFont)</p>

<ul>
<li><p>(void)load
{
  Method imp = class_getInstanceMethod([self class], @selector(initWithCoder:));
  Method myImp = class_getInstanceMethod([self class], @selector(myInitWithCoder:));
  method_exchangeImplementations(imp, myImp);
}</p></li>
<li><p>(id)myInitWithCoder:(NSCoder*)aDecode
{
  [self myInitWithCoder:aDecode];
  if (self) {
      CGFloat fontSize = self.font.pointSize;
      self.font = &lt;# Your Font Here #>;
  }
  return self;
}</p></li>
</ul>


<p>@end</p>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
